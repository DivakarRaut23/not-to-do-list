{"ast":null,"code":"import axios from 'axios';\nconst rootUrl = \"http://localhost:5000/api/v1\";\nexport const createTask = formData => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const response = await axios.post(rootUrl, formData);\n      console.log(response.data);\n      resolve(response.data);\n    } catch (error) {\n      console.log(error);\n      resolve({\n        status: \"error\",\n        message: error.message\n      });\n    }\n  });\n};\nexport const getTaskLists = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(rootUrl);\n      resolve(data.result);\n    } catch (error) {\n      console.log(error);\n      resolve(false);\n    }\n  });\n};\nexport const deleteTaskLists = ids => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.delete(rootUrl, {\n        data: ids\n      });\n      resolve(data);\n    } catch (error) {\n      console.log(error);\n      resolve({\n        status: \"error\",\n        message: error.message\n      });\n    }\n  });\n};\nexport const switchTask = todo => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.patch(rootUrl, {\n        todo\n      });\n      resolve(data);\n    } catch (error) {\n      console.log(error);\n      resolve({\n        status: \"error\",\n        message: error.message\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/api/taskApi.js"],"names":["axios","rootUrl","createTask","formData","Promise","resolve","reject","response","post","console","log","data","error","status","message","getTaskLists","get","result","deleteTaskLists","ids","delete","switchTask","todo","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,8BAAhB;AAEA,OAAO,MAAMC,UAAU,GAAKC,QAAQ,IAAI;AACpC,SAAO,IAAIC,OAAJ,CAAa,OAAMC,OAAN,EAAeC,MAAf,KAAyB;AAEzC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWP,OAAX,EAAoBE,QAApB,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAN,MAAAA,OAAO,CAACE,QAAQ,CAACI,IAAV,CAAP;AAED,KALH,CAKI,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAP,MAAAA,OAAO,CAAC;AACJQ,QAAAA,MAAM,EAAG,OADL;AAEJC,QAAAA,OAAO,EAAGF,KAAK,CAACE;AAFZ,OAAD,CAAP;AAKD;AAGN,GAjBM,CAAP;AAoBH,CArBM;AAuBP,OAAO,MAAMC,YAAY,GAAK,MAAM;AAChC,SAAO,IAAIX,OAAJ,CAAa,OAAMC,OAAN,EAAeC,MAAf,KAAyB;AAEzC,QAAI;AAEA,YAAM;AAACK,QAAAA;AAAD,UAAS,MAAMX,KAAK,CAACgB,GAAN,CAAUf,OAAV,CAArB;AAGCI,MAAAA,OAAO,CAACM,IAAI,CAACM,MAAN,CAAP;AAEF,KAPH,CAOI,OAAOL,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAP,MAAAA,OAAO,CAAC,KAAD,CAAP;AAED;AAGN,GAhBM,CAAP;AAmBH,CApBM;AAsBP,OAAO,MAAMa,eAAe,GAAMC,GAAD,IAAS;AACtC,SAAO,IAAIf,OAAJ,CAAa,OAAMC,OAAN,EAAeC,MAAf,KAAyB;AAEzC,QAAI;AACA,YAAM;AAACK,QAAAA;AAAD,UAAS,MAAMX,KAAK,CAACoB,MAAN,CAAanB,OAAb,EAAsB;AAACU,QAAAA,IAAI,EAAEQ;AAAP,OAAtB,CAArB;AACAd,MAAAA,OAAO,CAACM,IAAD,CAAP;AAED,KAJH,CAII,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAP,MAAAA,OAAO,CAAC;AACJQ,QAAAA,MAAM,EAAG,OADL;AAEJC,QAAAA,OAAO,EAAGF,KAAK,CAACE;AAFZ,OAAD,CAAP;AAKD;AAGN,GAhBM,CAAP;AAmBH,CApBM;AAsBP,OAAO,MAAMO,UAAU,GAAKC,IAAI,IAAI;AAChC,SAAO,IAAIlB,OAAJ,CAAa,OAAMC,OAAN,EAAeC,MAAf,KAAyB;AAEzC,QAAI;AACA,YAAM;AAACK,QAAAA;AAAD,UAAS,MAAMX,KAAK,CAACuB,KAAN,CAAYtB,OAAZ,EAAqB;AAACqB,QAAAA;AAAD,OAArB,CAArB;AACAjB,MAAAA,OAAO,CAACM,IAAD,CAAP;AAED,KAJH,CAII,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAP,MAAAA,OAAO,CAAC;AACJQ,QAAAA,MAAM,EAAG,OADL;AAEJC,QAAAA,OAAO,EAAGF,KAAK,CAACE;AAFZ,OAAD,CAAP;AAKD;AAGN,GAhBM,CAAP;AAmBH,CApBM","sourcesContent":["import axios from 'axios';\n\nconst rootUrl = \"http://localhost:5000/api/v1\";\n\nexport const createTask =   formData => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const response = await axios.post(rootUrl, formData);\n            console.log(response.data)\n            resolve(response.data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const getTaskLists =   () => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n\n            const {data} = await axios.get(rootUrl);\n\n                       \n             resolve(data.result)\n            \n          } catch (error) {\n            console.log(error);\n            resolve(false);\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const deleteTaskLists =   (ids) => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const {data} = await axios.delete(rootUrl, {data: ids});\n            resolve(data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const switchTask =   todo => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const {data} = await axios.patch(rootUrl, {todo});\n            resolve(data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}"]},"metadata":{},"sourceType":"module"}