{"ast":null,"code":"import _toConsumableArray from\"/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSlice}from'@reduxjs/toolkit';var initialState={taskList:[],notToDoList:[],itemToDelete:[],totalHour:0,isPending:false,status:\"\",message:\"\"};var taskSlice=createSlice({name:\"task\",initialState:initialState,reducers:{requestPending:function requestPending(state){state.isPending=true;},addTaskSuccess:function addTaskSuccess(state,action){state.isPending=false;state.status=action.payload.status;state.message=action.payload.message;},updateTaskSuccess:function updateTaskSuccess(state,_ref){var payload=_ref.payload;state.isPending=false;state.status=payload.status;state.message=payload.message;},deleteTaskSuccess:function deleteTaskSuccess(state,_ref2){var payload=_ref2.payload;state.isPending=false;state.status=payload.status;state.message=payload.message;if(payload.status===\"success\")state.itemToDelete=[];},setItemToDelete:function setItemToDelete(state,_ref3){var payload=_ref3.payload;var checked=payload.checked,value=payload.value;if(checked){state.itemToDelete=[].concat(_toConsumableArray(state.itemToDelete),[value]);}else{var newList=state.itemToDelete.filter(function(item){return item!==value;});state.itemToDelete=newList;}},fetchTaskSuccess:function fetchTaskSuccess(state,_ref4){var _ref4$payload=_ref4.payload,payload=_ref4$payload===void 0?[]:_ref4$payload;state.isPending=false;state.totalHour=payload.reduce(function(subTtl,row){return subTtl+ +row.hr;},0);state.taskList=payload.filter(function(noList){return noList.todo;});state.notToDoList=payload.filter(function(noList){return!noList.todo;});},requestFail:function requestFail(state,_ref5){var payload=_ref5.payload;state.isPending=false;state.status=\"error\";state.message=payload;}}});var reducer=taskSlice.reducer,actions=taskSlice.actions;var requestPending=actions.requestPending,addTaskSuccess=actions.addTaskSuccess,requestFail=actions.requestFail,fetchTaskSuccess=actions.fetchTaskSuccess,updateTaskSuccess=actions.updateTaskSuccess,setItemToDelete=actions.setItemToDelete,deleteTaskSuccess=actions.deleteTaskSuccess;export{requestPending,addTaskSuccess,requestFail,fetchTaskSuccess,updateTaskSuccess,setItemToDelete,deleteTaskSuccess};export default reducer;","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/src/components/taskList/taskSlice.js"],"names":["createSlice","initialState","taskList","notToDoList","itemToDelete","totalHour","isPending","status","message","taskSlice","name","reducers","requestPending","state","addTaskSuccess","action","payload","updateTaskSuccess","deleteTaskSuccess","setItemToDelete","checked","value","newList","filter","item","fetchTaskSuccess","reduce","subTtl","row","hr","noList","todo","requestFail","reducer","actions"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n\n    taskList : [],\n    notToDoList :[],\n    itemToDelete : [],\n    totalHour : 0,\n    isPending : false,\n    status : \"\",\n    message: \"\"\n};\n\nconst taskSlice = createSlice({\n    name: \"task\",\n    initialState,\n    reducers : {\n        requestPending : state => {\n            state.isPending = true\n        },\n        addTaskSuccess : (state, action) => {\n            state.isPending = false\n            state.status =  action.payload.status\n            state.message = action.payload.message\n        },\n        updateTaskSuccess : (state, {payload}) => {\n            state.isPending = false\n            state.status =  payload.status\n            state.message = payload.message\n        },\n        deleteTaskSuccess : (state, {payload}) => {\n            state.isPending = false\n            state.status =  payload.status\n            state.message = payload.message\n            if (payload.status === \"success\") state.itemToDelete = []\n        },\n        setItemToDelete : (state, {payload}) => {\n            const {checked, value} = payload\n            if (checked) {\n                state.itemToDelete = [...state.itemToDelete, value]\n            } else {\n            const newList = state.itemToDelete.filter(item => item !== value);\n            state.itemToDelete = newList\n            }\n        },\n        \n        fetchTaskSuccess : (state, {payload = []}) => {\n            state.isPending = false\n            state.totalHour = payload.reduce((subTtl, row) => subTtl + +row.hr, 0)\n            state.taskList = payload.filter((noList) => noList.todo)\n            state.notToDoList = payload.filter((noList) => !noList.todo)\n\n        },\n        requestFail : (state, {payload}) => {\n            \n            state.isPending = false;\n            state.status = \"error\"\n            state.message = payload\n\n        }\n    }\n})\n\nconst {reducer, actions} = taskSlice\n\nexport const {requestPending,addTaskSuccess,requestFail,fetchTaskSuccess,updateTaskSuccess,setItemToDelete,deleteTaskSuccess} = actions;\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}