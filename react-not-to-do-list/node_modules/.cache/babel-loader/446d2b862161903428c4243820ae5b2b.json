{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isPending: true,\n  status: \"success\",\n  message: \"static message for testing\"\n};\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    requestPending: state => {\n      state.isPending = true;\n    },\n    addTaskSuccess: (state, action) => {\n      state.isPending = false;\n      state.status = action.payload.status;\n      state.message = action.payload.message;\n    },\n    requestFail: state => {\n      state.isPending = false;\n      state.state = \"er\";\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = taskSlice;\nexport const {\n  requestPending,\n  addTaskSuccess,\n  requestFail\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/taskSlice.js"],"names":["createSlice","initialState","isPending","status","message","taskSlice","name","reducers","requestPending","state","addTaskSuccess","action","payload","requestFail","reducer","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,IADK;AAEjBC,EAAAA,MAAM,EAAG,SAFQ;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,MADoB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAG;AACPC,IAAAA,cAAc,EAAGC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACH,KAHM;AAIPQ,IAAAA,cAAc,EAAG,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAChCF,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,MAAN,GAAgBQ,MAAM,CAACC,OAAP,CAAeT,MAA/B;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeR,OAA/B;AACH,KARM;AASPS,IAAAA,WAAW,EAAGJ,KAAK,IAAI;AAEnBA,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACA,KAAN,GAAc,IAAd;AAEH;AAdM;AAHe,CAAD,CAA7B;AAqBA,MAAM;AAACK,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBV,SAA3B;AAEA,OAAO,MAAM;AAACG,EAAAA,cAAD;AAAgBE,EAAAA,cAAhB;AAA+BG,EAAAA;AAA/B,IAA8CE,OAApD;AAEP,eAAeD,OAAf","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n    isPending : true,\n    status : \"success\",\n    message: \"static message for testing\"\n};\n\nconst taskSlice = createSlice({\n    name: \"task\",\n    initialState,\n    reducers : {\n        requestPending : state => {\n            state.isPending = true\n        },\n        addTaskSuccess : (state, action) => {\n            state.isPending = false\n            state.status =  action.payload.status\n            state.message = action.payload.message\n        },\n        requestFail : state => {\n            \n            state.isPending = false;\n            state.state = \"er\"\n\n        }\n    }\n})\n\nconst {reducer, actions} = taskSlice\n\nexport const {requestPending,addTaskSuccess,requestFail} = actions;\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}