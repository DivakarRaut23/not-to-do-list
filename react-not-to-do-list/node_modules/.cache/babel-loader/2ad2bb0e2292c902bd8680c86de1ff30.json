{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js\";\nimport React from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskLists = ({\n  taskLists,\n  handleOnRemoveTask,\n  handleOnDeleteTask\n}) => {\n  const ifChecked = (e, index) => {\n    console.log(e.checked);\n    console.log(\"index>>>\", index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [taskLists === null || taskLists === void 0 ? void 0 : taskLists.map((t, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: () => ifChecked(index),\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: t.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: t.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleOnRemoveTask(index),\n                children: \"  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              style: {\n                marginLeft: '5px'\n              },\n              onClick: () => handleOnDeleteTask(),\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = TaskLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js"],"names":["React","Table","Button","TaskLists","taskLists","handleOnRemoveTask","handleOnDeleteTask","ifChecked","e","index","console","log","checked","map","t","title","hr","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA,kBAAX;AAA8BC,EAAAA;AAA9B,CAAD,KAAuD;AAE9E,QAAMC,SAAS,GAAG,CAACC,CAAD,EAAGC,KAAH,KAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,OAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AAED,GAJD;;AAOE,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACN;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,eASN;AAAA,mBAEOL,SAFP,aAEOA,SAFP,uBAEOA,SAAS,CAAES,GAAX,CAAe,CAACC,CAAD,EAAGL,KAAH,KAAa;AAEzB,8BACI;AAAA,oCACA;AAAA,qCAAI;AAAO,gBAAA,OAAO,EAAE,MAAKF,SAAS,CAACE,KAAD,CAA9B;AAAuC,gBAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKK,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMX,kBAAkB,CAACI,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWC,SAbJ,CAFP,eAiBM;AAAA,iCACE;AAAA,mCAAI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,QAAhB;AAAyB,cAAA,KAAK,EAAE;AAACQ,gBAAAA,UAAU,EAAC;AAAZ,eAAhC;AAAmD,cAAA,OAAO,EAAE,MAAMX,kBAAkB,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBN;AAAA;AAAA;AAAA;AAAA;AAAA,cATM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAsCH,CA/CM;KAAMH,S","sourcesContent":["import React from 'react'\nimport {Table, Button} from 'react-bootstrap'\n\nexport const TaskLists = ({taskLists,handleOnRemoveTask,handleOnDeleteTask}) => {\n\n  const ifChecked = (e,index)=> {\n    console.log(e.checked)\n    console.log(\"index>>>\", index)\n\n  }\n\n    \n    return (\n        <>\n        <h2>Task list</h2>\n        <Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>Task</th>\n      <th>Hours</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    \n        {taskLists?.map((t,index) => {\n\n            return (\n                <tr key={index}>\n                <td><input onClick={()=> ifChecked(index) }type=\"checkbox\" /></td>\n                <td>{t.title}</td>\n                <td>{t.hr}</td>\n                <td>\n                  <Button onClick={() => handleOnRemoveTask(index)}>  </Button>\n                  </td>\n                </tr>\n            )\n\n            })\n        }\n        <tr>\n          <td><Button variant=\"danger\" style={{marginLeft:'5px'}}onClick={() => handleOnDeleteTask()}> Delete </Button></td>\n        </tr>\n      \n   \n  </tbody>\n</Table>\n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}