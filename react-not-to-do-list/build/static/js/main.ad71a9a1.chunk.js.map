{"version":3,"sources":["components/taskList/taskSlice.js","api/taskApi.js","components/taskList/taskAction.js","components/form/Addform.js","components/totalHour/TotalHr.js","components/taskList/TaskLists.js","components/notToDoLists/NotToDoLists.js","App.js","store.js","index.js"],"names":["taskSlice","createSlice","name","initialState","taskList","notToDoList","itemToDelete","totalHour","isPending","status","message","reducers","requestPending","state","addTaskSuccess","action","payload","updateTaskSuccess","deleteTaskSuccess","setItemToDelete","checked","value","newList","filter","item","fetchTaskSuccess","reduce","subTtl","row","hr","noList","todo","requestFail","reducer","actions","rootUrl","createTask","formData","Promise","resolve","reject","a","axios","post","response","console","log","data","deleteTaskLists","ids","delete","switchTask","patch","fetchTaskLists","dispatch","get","result","fetchTask","taskSwitch","toUpdate","initialFormData","title","AddForm","useDispatch","useSelector","task","useState","setTask","handleOnChange","e","target","Form","onSubmit","preventDefault","alert","Row","Col","Control","onChange","placeholder","type","Button","variant","TotalHr","Alert","show","TaskLists","Table","striped","bordered","hover","size","map","t","defaultValue","_id","includes","onClick","NotToDoLists","totalSavedTime","nt","index","colSpan","App","useEffect","className","Container","Spinner","animation","window","confirm","store","configureStore","taskReducer","ReactDOM","render","document","getElementById"],"mappings":"qWAaMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAbiB,CAEjBC,SAAW,GACXC,YAAa,GACbC,aAAe,GACfC,UAAY,EACZC,WAAY,EACZC,OAAS,GACTC,QAAS,IAMTC,SAAW,CACPC,eAAiB,SAAAC,GACbA,EAAML,WAAY,GAEtBM,eAAiB,SAACD,EAAOE,GACrBF,EAAML,WAAY,EAClBK,EAAMJ,OAAUM,EAAOC,QAAQP,OAC/BI,EAAMH,QAAUK,EAAOC,QAAQN,SAEnCO,kBAAoB,SAACJ,EAAD,GAAuB,IAAdG,EAAa,EAAbA,QACzBH,EAAML,WAAY,EAClBK,EAAMJ,OAAUO,EAAQP,OACxBI,EAAMH,QAAUM,EAAQN,SAE5BQ,kBAAoB,SAACL,EAAD,GAAuB,IAAdG,EAAa,EAAbA,QACzBH,EAAML,WAAY,EAClBK,EAAMJ,OAAUO,EAAQP,OACxBI,EAAMH,QAAUM,EAAQN,QACD,YAAnBM,EAAQP,SAAsBI,EAAMP,aAAe,KAE3Da,gBAAkB,SAACN,EAAD,GAAuB,IAAdG,EAAa,EAAbA,QAChBI,EAAkBJ,EAAlBI,QAASC,EAASL,EAATK,MAChB,GAAID,EACAP,EAAMP,aAAN,sBAAyBO,EAAMP,cAA/B,CAA6Ce,QAC1C,CACP,IAAMC,EAAUT,EAAMP,aAAaiB,QAAO,SAAAC,GAAI,OAAIA,IAASH,KAC3DR,EAAMP,aAAegB,IAIzBG,iBAAmB,SAACZ,EAAD,GAA4B,IAAD,IAAlBG,eAAkB,MAAR,GAAQ,EAC1CH,EAAML,WAAY,EAClBK,EAAMN,UAAYS,EAAQU,QAAO,SAACC,EAAQC,GAAT,OAAiBD,IAAUC,EAAIC,KAAI,GACpEhB,EAAMT,SAAWY,EAAQO,QAAO,SAACO,GAAD,OAAYA,EAAOC,QACnDlB,EAAMR,YAAcW,EAAQO,QAAO,SAACO,GAAD,OAAaA,EAAOC,SAG3DC,YAAc,SAACnB,EAAD,GAAuB,IAAdG,EAAa,EAAbA,QAEnBH,EAAML,WAAY,EAClBK,EAAMJ,OAAS,QACfI,EAAMH,QAAUM,MAMrBiB,EAAoBjC,EAApBiC,QAASC,EAAWlC,EAAXkC,QAEFtB,EAAkHsB,EAAlHtB,eAAeE,EAAmGoB,EAAnGpB,eAAekB,EAAoFE,EAApFF,YAAYP,EAAwES,EAAxET,iBAAiBR,EAAuDiB,EAAvDjB,kBAAkBE,EAAqCe,EAArCf,gBAAgBD,EAAqBgB,EAArBhB,kBAE5Fe,I,iBCjETE,EAAU,+BAEHC,EAAe,SAAAC,GACxB,OAAO,IAAIC,QAAJ,uCAAa,WAAMC,EAASC,GAAf,eAAAC,EAAA,+EAGWC,IAAMC,KAAKR,EAASE,GAH/B,OAGNO,EAHM,OAIZC,QAAQC,IAAIF,EAASG,MACrBR,EAAQK,EAASG,MALL,gDAQZF,QAAQC,IAAR,MACAP,EAAQ,CACJ9B,OAAS,QACTC,QAAU,KAAMA,UAXR,yDAAb,0DA4CEsC,EAAoB,SAACC,GAC9B,OAAO,IAAIX,QAAJ,uCAAa,WAAMC,EAASC,GAAf,iBAAAC,EAAA,+EAGSC,IAAMQ,OAAOf,EAAS,CAACY,KAAME,IAHtC,gBAGLF,EAHK,EAGLA,KACPR,EAAQQ,GAJI,gDAOZF,QAAQC,IAAR,MACAP,EAAQ,CACJ9B,OAAS,QACTC,QAAU,KAAMA,UAVR,yDAAb,0DAqBEyC,EAAe,SAAApB,GACxB,OAAO,IAAIO,QAAJ,uCAAa,WAAMC,EAASC,GAAf,iBAAAC,EAAA,+EAGSC,IAAMU,MAAMjB,EAAS,CAACJ,SAH/B,gBAGLgB,EAHK,EAGLA,KACPR,EAAQQ,GAJI,gDAOZF,QAAQC,IAAR,MACAP,EAAQ,CACJ9B,OAAS,QACTC,QAAU,KAAMA,UAVR,yDAAb,0DCxDE2C,EAAiB,yDAAM,WAAMC,GAAN,eAAAb,EAAA,sEAE5Ba,EAAS1C,KAFmB,SDYzB,IAAI0B,QAAJ,uCAAa,WAAMC,EAASC,GAAf,iBAAAC,EAAA,+EAISC,IAAMa,IAAIpB,GAJnB,gBAILY,EAJK,EAILA,KAGNR,EAAQQ,EAAKS,QAPF,gDAUZX,QAAQC,IAAR,MACAP,GAAQ,GAXI,yDAAb,yDCZyB,gDAGc,GAHd,OAGtBkB,EAHsB,KAI5BH,EAAS7B,EAAiBgC,IAJE,kDAO5BH,EAAStB,EAAY,KAAMtB,UAPC,0DAAN,uDAYjBgD,EAAa,SAAAC,GAAQ,8CAAI,WAAML,GAAN,eAAAb,EAAA,sEAE9Ba,EAAS1C,KAFqB,SAGTuC,EAAWQ,GAHF,OAGxBH,EAHwB,OAI9BF,EAASrC,EAAkBuC,IAET,YAAlBA,EAAO/C,QAAwB6C,EAASD,KANV,gDAS9BC,EAAStB,EAAY,KAAMtB,UATG,yDAAJ,uD,OCvB5BkD,EAAkB,CACpBC,MAAO,OACPhC,GAAI,IAIMiC,EAAU,WAEpB,IAAMR,EAAWS,cAEVxD,EAAayD,aAAY,SAAAnD,GAAK,OAAIA,EAAMoD,QAAxC1D,UAJmB,EAMN2D,mBAASN,GANH,mBAMvBK,EANuB,KAMjBE,EANiB,KAQxBC,EAAiB,SAAAC,GAAM,IAAD,EACHA,EAAEC,OAAhBpE,EADiB,EACjBA,KAAKmB,EADY,EACZA,MACZ8C,EAAQ,2BACFF,GADC,kBAEH/D,EAAiB,OAATA,GAAiBmB,EAAQA,MAYrC,OACQ,cAACkD,EAAA,EAAD,CAAMC,SATK,SAAAH,GAEnB,GADAA,EAAEI,iBACER,EAAKpC,GAAKtB,EAAY,IACvB,OAAOmE,MAAM,sED3BG,IAAArC,EC6BjBiB,GD7BiBjB,EC6BA4B,ED7BQ,uCAAI,WAAMX,GAAN,eAAAb,EAAA,sEAE3Ba,EAAS1C,KAFkB,SAGNwB,EAAWC,GAHL,OAGrBmB,EAHqB,OAI3BF,EAASxC,EAAe0C,IAEN,YAAlBA,EAAO/C,QAAwB6C,EAASD,KANb,gDAS3BC,EAAStB,EAAY,KAAMtB,UATA,yDAAJ,yDCiCnB,SACA,eAACiE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACA,cAACL,EAAA,EAAKM,QAAN,CACAC,SAAUV,EACVW,YAAY,YACZ1D,MAAO4C,EAAKJ,MACZ3D,KAAK,YAGL,cAAC0E,EAAA,EAAD,UACA,cAACL,EAAA,EAAKM,QAAN,CACAC,SAAUV,EACVW,YAAY,kBACZC,KAAK,SACL3D,MAAO4C,EAAKpC,GACZ3B,KAAK,SAGL,cAAC0E,EAAA,EAAD,UACA,cAACK,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,UAA9B,0BCrDFC,EAAU,SAAC,GAAiB,IAAhB5E,EAAe,EAAfA,UACtB,OACQ,mCACA,eAAC6E,EAAA,EAAD,CAAOC,KAAM9E,EAAU,EAAE2E,QAAQ,UAAjC,oCAAmE3E,EAAnE,uBAAkG,IAAMA,Q,QCEvG+E,EAAY,WAErB,IAAMhC,EAAWS,cAFU,EAKIC,aAAY,SAAAnD,GAAK,OAAKA,EAAMoD,QAAtD7D,EALsB,EAKtBA,SAAUE,EALY,EAKZA,aAgBf,OACM,qCACA,2CACA,eAACiF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAnC,UACE,gCACE,+BACE,sCACA,uCACA,6CAGN,uCAEOvF,QAFP,IAEOA,OAFP,EAEOA,EAAUwF,KAAI,SAACC,GAEZ,OACI,+BACA,+BACA,uBACAf,SAAU,SAACT,GAAD,OAAOf,EAASnC,EAAgBkD,EAAEC,UAC5CwB,aAAcD,EAAEE,IAChBf,KAAK,WACL5D,QAASd,EAAa0F,SAASH,EAAEE,OAEhC,GACD,gCAAQF,EAAEhC,WACV,6BAAKgC,EAAEhE,KACP,6BACE,cAACoD,EAAA,EAAD,CACAgB,QAAS,kBAAM3C,EAASI,EAAW,CACjCqC,IAAKF,EAAEE,IACPhE,MAAK,MAHP,kCAZO8D,EAAEE,iBCtCrBG,EAAe,WAE3B,IAAM5C,EAAWS,cAEV1D,EAAe2D,aAAY,SAAAnD,GAAK,OAAIA,EAAMoD,QAA1C5D,YAED8F,EAAiB9F,EAAYqB,QAAO,SAACC,EAAQC,GAAT,OAAiBD,EAASC,EAAIC,KAAG,GAEzE,OACI,qCACA,gDACA,eAAC0D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAnC,UACA,gCACE,+BACE,sCACA,uCACA,6CAGV,yCACCtF,QADD,IACCA,OADD,EACCA,EAAauF,KAAI,SAACQ,EAAGC,GAExB,OACI,+BACA,+BAAI,uBACJvB,SAAU,SAACT,GAAD,OAAOf,EAASnC,EAAgBkD,EAAEC,UAC5CwB,aACaM,EAAGL,IAAKf,KAAK,aACb,GACb,gCAAQoB,EAAGvC,WACX,6BAAKuC,EAAGvE,KACR,6BACE,cAACoD,EAAA,EAAD,CACAgB,QAAS,kBAAM3C,EAASI,EAAW,CACbqC,IAAKK,EAAGL,IACRhE,MAAM,MAH5B,+BATOqE,EAAGL,QAoBhB,6BACE,oBAAIO,QAAQ,IAAZ,SACA,eAAClB,EAAA,EAAD,CAAOC,KAAMc,EAAe,EAAEjB,QAAQ,UAAtC,iCAAqEiB,mBC0BxDI,EAhEF,WACX,IAAMjD,EAAYS,cADD,EAG0CC,aAAY,SAAAnD,GAAK,OAAIA,EAAMoD,QAAjFzD,EAHY,EAGZA,UAAUC,EAHE,EAGFA,OAAQC,EAHN,EAGMA,QAASH,EAHf,EAGeA,UAAWD,EAH1B,EAG0BA,aAc3C,OAXFkG,qBAAU,WAERlD,EAASD,OAER,CAACC,IAQM,qBAAKmD,UAAU,MAAf,SACM,eAACC,EAAA,EAAD,WACJ,cAAC/B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACA,sBAAK6B,UAAU,mBAAf,cAAoC,yDAGtC,uBACA,gCACG/F,GACD,eAAC0E,EAAA,EAAD,CAAOF,QAAoB,YAAXzE,EAAuB,UAAY,SAAnD,cAA+DC,KAE7DF,GACF,cAACmG,EAAA,EAAD,CAASC,UAAU,cAGrB,cAAC,EAAD,IACA,uBACA,eAACjC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACA,cAAC,EAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAAC,EAAD,SAGF,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACA,cAACK,EAAA,EAAD,CAAQC,QAAQ,SAASe,QAAS,kBAAM3C,GLlB1BL,EKkB+C3C,ELlBhD,uCAAQ,WAAMgD,GAAN,eAAAb,EAAA,mEAExBoE,OAAOC,QAAQ,oDAFS,uBAKvBxD,EAAS1C,KALc,SAMFoC,EAAgBC,GANd,OAMjBO,EANiB,OAOvBF,EAASpC,EAAkBsC,IACT,YAAlBA,EAAO/C,QAAwB6C,EAASD,KARjB,yDAa3BC,EAAStB,EAAY,KAAMtB,UAbA,0DAAR,4DAACuC,GKkBd,0BAGF,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACA,cAAC,EAAD,CAASrE,UAAWA,MAEpB,cAACqE,EAAA,EAAD,aCzDCmC,EAPDC,YAAe,CACzB/E,QAAU,CACNgC,KAAOgD,KCIfC,IAASC,OACT,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACA,cAAC,EAAD,MAIAK,SAASC,eAAe,W","file":"static/js/main.ad71a9a1.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n\n    taskList : [],\n    notToDoList :[],\n    itemToDelete : [],\n    totalHour : 0,\n    isPending : false,\n    status : \"\",\n    message: \"\"\n};\n\nconst taskSlice = createSlice({\n    name: \"task\",\n    initialState,\n    reducers : {\n        requestPending : state => {\n            state.isPending = true\n        },\n        addTaskSuccess : (state, action) => {\n            state.isPending = false\n            state.status =  action.payload.status\n            state.message = action.payload.message\n        },\n        updateTaskSuccess : (state, {payload}) => {\n            state.isPending = false\n            state.status =  payload.status\n            state.message = payload.message\n        },\n        deleteTaskSuccess : (state, {payload}) => {\n            state.isPending = false\n            state.status =  payload.status\n            state.message = payload.message\n            if (payload.status === \"success\") state.itemToDelete = []\n        },\n        setItemToDelete : (state, {payload}) => {\n            const {checked, value} = payload\n            if (checked) {\n                state.itemToDelete = [...state.itemToDelete, value]\n            } else {\n            const newList = state.itemToDelete.filter(item => item !== value);\n            state.itemToDelete = newList\n            }\n        },\n        \n        fetchTaskSuccess : (state, {payload = []}) => {\n            state.isPending = false\n            state.totalHour = payload.reduce((subTtl, row) => subTtl + +row.hr, 0)\n            state.taskList = payload.filter((noList) => noList.todo)\n            state.notToDoList = payload.filter((noList) => !noList.todo)\n\n        },\n        requestFail : (state, {payload}) => {\n            \n            state.isPending = false;\n            state.status = \"error\"\n            state.message = payload\n\n        }\n    }\n})\n\nconst {reducer, actions} = taskSlice\n\nexport const {requestPending,addTaskSuccess,requestFail,fetchTaskSuccess,updateTaskSuccess,setItemToDelete,deleteTaskSuccess} = actions;\n\nexport default reducer;","import axios from 'axios';\n\nconst rootUrl = \"http://localhost:5000/api/v1\";\n\nexport const createTask =   formData => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const response = await axios.post(rootUrl, formData);\n            console.log(response.data)\n            resolve(response.data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const getTaskLists =   () => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n\n            const {data} = await axios.get(rootUrl);\n\n                       \n             resolve(data.result)\n            \n          } catch (error) {\n            console.log(error);\n            resolve(false);\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const deleteTaskLists =   (ids) => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const {data} = await axios.delete(rootUrl, {data: ids});\n            resolve(data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}\n\nexport const switchTask =   todo => {\n    return new Promise (async(resolve, reject) =>{\n\n        try {\n            const {data} = await axios.patch(rootUrl, {todo});\n            resolve(data)\n            \n          } catch (error) {\n            console.log(error);\n            resolve({\n                status : \"error\",\n                message : error.message\n            })\n            \n          }\n\n\n    })\n\n    \n}","import {requestPending,addTaskSuccess,requestFail, fetchTaskSuccess,updateTaskSuccess,deleteTaskSuccess} from './taskSlice.js'\nimport {createTask,deleteTaskLists,getTaskLists, switchTask} from '../../api/taskApi.js'\n\nexport const addTask = formData => async dispatch => {\n    try {\n        dispatch(requestPending());\n        const result = await createTask(formData);\n        dispatch(addTaskSuccess(result))\n\n        result.status === \"success\" && dispatch(fetchTaskLists())\n        \n    } catch (error) {\n        dispatch(requestFail(error.message))\n    }\n}\n\nexport const fetchTaskLists = () => async dispatch => {\n    try {\n        dispatch(requestPending());\n        const fetchTask = await getTaskLists() || [];\n        dispatch(fetchTaskSuccess(fetchTask))\n        \n    } catch (error) {\n        dispatch(requestFail(error.message))\n        \n    }\n}\n\nexport const taskSwitch = toUpdate => async dispatch => {\n    try {\n        dispatch(requestPending());\n        const result = await switchTask(toUpdate);\n        dispatch(updateTaskSuccess(result));\n\n        result.status === \"success\" && dispatch(fetchTaskLists())\n        \n    } catch (error) {\n        dispatch(requestFail(error.message))\n        \n    }\n}\n\nexport const deleteTasks = (ids)=> async dispatch => {\n    try {\n        if(window.confirm(\"Are you sure want to delete the selected items? \")\n        )\n    {\n            dispatch(requestPending());\n            const result = await deleteTaskLists(ids)\n            dispatch(deleteTaskSuccess(result))\n            result.status === \"success\" && dispatch(fetchTaskLists());\n\n        }\n             \n    } catch (error) {\n        dispatch(requestFail(error.message))\n        \n    }\n}","import React,{useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Row, Col,Button} from 'react-bootstrap';\nimport {addTask} from '../taskList/taskAction.js'\n\nconst initialFormData = {\n    title: \"test\",\n    hr: 10, \n}\n\n\nexport  const AddForm = () => {\n\n    const dispatch = useDispatch()\n\n    const {totalHour} = useSelector(state => state.task)\n\nconst [task, setTask] = useState(initialFormData);\n\nconst handleOnChange = e => {\n    const {name,value} = e.target \n    setTask({\n       ...task, \n       [name] : name === \"hr\" ? +value : value,\n    })\n}\n\nconst handleOnSubmit = e => {\n    e.preventDefault ();\n    if (task.hr + totalHour > 168 ) {\n       return alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n       } \n      dispatch(addTask(task))\n    }\n    \n    return (\n            <Form onSubmit={handleOnSubmit}>\n            <Row>\n                <Col>\n                <Form.Control \n                onChange={handleOnChange}\n                placeholder=\"Task Name\" \n                value={task.title}\n                name=\"title\"\n                />\n                </Col>\n                <Col>\n                <Form.Control\n                onChange={handleOnChange}\n                placeholder=\"Number of hours\"\n                type=\"number\" \n                value={task.hr}\n                name=\"hr\"\n                />\n                </Col>\n                <Col>\n                <Button type=\"submit\" variant=\"primary\"> Add</Button>\n                </Col>\n            </Row>\n            </Form>\n    )\n}\n","import React from 'react'\nimport {Alert} from 'react-bootstrap';\n\nexport  const TotalHr = ({totalHour}) => {\n    return (\n            <>\n            <Alert show={totalHour>0}variant=\"success\">Total Allocated Hours: {totalHour}/ Hours Remaining : {168 - totalHour}</Alert>\n            </>\n           )\n}\n","import React from 'react'\nimport {useSelector, useDispatch}from 'react-redux'\nimport {Table, Button} from 'react-bootstrap'\nimport {taskSwitch} from './taskAction.js'\nimport {setItemToDelete} from './taskSlice'\n\n\n\nexport const TaskLists = () => {\n\n    const dispatch = useDispatch()\n\n\n  const {taskList, itemToDelete} = useSelector(state =>  state.task)\n \n\n  // const ifChecked = e => {\n  //   const {checked, value} = e.target;\n  //   console.log(checked, value)\n  //   if(checked){\n  //     return setIndex([...index, value])\n      \n  //   } \n  //     const removeIndex = index.filter((item) => item !== value);\n  //     setIndex(removeIndex)\n  //     console.log(\"index after popping>>\", index)\n   \n  // }\n         \n    return (\n          <>\n          <h2>Task list</h2>\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Task</th>\n                <th>Hours</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n          <tbody>\n            \n                {taskList?.map((t) => {\n\n                    return (\n                        <tr key={t._id}>\n                        <td>\n                        <input\n                        onChange={(e) => dispatch(setItemToDelete(e.target))}  \n                        defaultValue={t._id}\n                        type=\"checkbox\"\n                        checked={itemToDelete.includes(t._id)}\n                        />\n                        {\"\"}\n                        <label>{t.title}</label></td>\n                        <td>{t.hr}</td>\n                        <td>\n                          <Button \n                          onClick={() => dispatch(taskSwitch({\n                            _id: t._id,\n                            todo:false,\n                          }))}> Mark As Not To </Button>\n                          </td>\n                        </tr>\n                    )\n\n                    })\n                }\n                        \n          </tbody>\n        </Table>\n  </>\n    )\n}\n","import React from 'react'\nimport {Alert} from 'react-bootstrap';\nimport {setItemToDelete} from '../taskList/taskSlice'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {taskSwitch} from '../taskList/taskAction'\nimport {Table, Button} from 'react-bootstrap';\n\nexport  const NotToDoLists = () => {\n\n  const dispatch = useDispatch()\n\n  const {notToDoList} = useSelector(state => state.task)\n\n  const totalSavedTime = notToDoList.reduce((subTtl, row) => subTtl + row.hr,0)\n\n    return (\n        <>\n        <h2>Not to do Task</h2>\n        <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Hours</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n  <tbody>\n  {notToDoList?.map((nt,index) => {\n\nreturn (\n    <tr key={nt._id}>\n    <td><input \n    onChange={(e) => dispatch(setItemToDelete(e.target))}\n    defaultValue=\n                {nt._id} type=\"checkbox\" />\n                {\"\"}\n    <label>{nt.title}</label></td>\n    <td>{nt.hr}</td>\n    <td>\n      <Button \n      onClick={() => dispatch(taskSwitch({\n                            _id: nt._id,\n                            todo: true,\n                          }))}> Add to Task </Button>\n      </td>\n    </tr>\n)\n\n})\n}\n<tr>\n  <td colSpan=\"3\">\n  <Alert show={totalSavedTime>0}variant=\"success\">Total Hours Saved : {totalSavedTime}</Alert>\n  </td>\n</tr>\n  </tbody>\n</Table>\n</>\n    )\n}\n","import {useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TotalHr} from './components/totalHour/TotalHr'\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\n\n\n// from taskAction js \n\nimport {fetchTaskLists,deleteTasks} from './components/taskList/taskAction'\n\nconst  App = () => {\n  const dispatch =  useDispatch()\n\nconst {isPending,status, message, totalHour, itemToDelete} = useSelector(state => state.task)\n\n\nuseEffect(() => {\n\n  dispatch(fetchTaskLists())\n  \n}, [dispatch])\n\n\n\n\n\n\n  return (\n          <div className=\"App\">\n                <Container>\n            <Row>\n              <Col>\n              <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n              </Col>\n            </Row>\n            <hr />\n            <div>\n              {message && \n              <Alert variant={status === 'success' ? \"success\" : \"danger\"}> {message}</Alert>\n              }\n              { isPending && \n              <Spinner animation=\"border\"></Spinner>\n            }\n            </div>\n            <AddForm />\n            <hr/>\n            <Row>\n              <Col>\n              <TaskLists />\n              </Col>\n              <Col>\n              <NotToDoLists />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Button variant=\"danger\" onClick={() => dispatch(deleteTasks(itemToDelete))}> Delete </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <TotalHr totalHour={totalHour}/>\n              </Col>\n              <Col>\n              \n              </Col>\n            </Row>\n          </Container>\n          \n          </div>\n  );\n}\n\n\nexport default App ;","import {configureStore} from '@reduxjs/toolkit';\nimport taskReducer from './components/taskList/taskSlice.js'\n\nconst store = configureStore({\n    reducer : {\n        task : taskReducer\n    }\n\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store.js'\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n\n</Provider>    ,\n\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}