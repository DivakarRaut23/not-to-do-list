{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotToDoLists = ({\n  markAsToDo,\n  noIndex,\n  setNoIndex\n}) => {\n  _s();\n\n  const {\n    notToDoList\n  } = useSelector(state => state.task);\n\n  const ifChecked = e => {\n    const {\n      checked,\n      value\n    } = e.target;\n    console.log(checked, value);\n\n    if (checked) {\n      return setNoIndex([...noIndex, value]);\n    }\n\n    const removeIndex = noIndex.filter(item => item !== value);\n    setNoIndex(removeIndex);\n    console.log(\"index after popping>>\", noIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not to do Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notToDoList === null || notToDoList === void 0 ? void 0 : notToDoList.map((nt, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: ifChecked,\n                defaultValue: nt._id,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 9\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: nt.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: nt.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => dispatch(taskSwitch({\n                  _id: t._id,\n                  todo: false\n                })),\n                children: \" Add to Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 5\n            }, this)]\n          }, nt._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotToDoLists, \"YAwYR2bw3yvHZiDsD6qGnRFnd1k=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotToDoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotToDoLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js"],"names":["React","useSelector","Table","Button","NotToDoLists","markAsToDo","noIndex","setNoIndex","notToDoList","state","task","ifChecked","e","checked","value","target","console","log","removeIndex","filter","item","map","nt","index","_id","title","hr","dispatch","taskSwitch","t","todo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;;;AAEA,OAAQ,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAYC,EAAAA,OAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAAA;;AAEhE,QAAM;AAACC,IAAAA;AAAD,MAAgBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;;AAEA,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrB,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAmBF,CAAC,CAACG,MAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB;;AACA,QAAGD,OAAH,EAAW;AACT,aAAON,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaQ,KAAb,CAAD,CAAjB;AAED;;AACC,UAAMI,WAAW,GAAGZ,OAAO,CAACa,MAAR,CAAgBC,IAAD,IAAUA,IAAI,KAAKN,KAAlC,CAApB;AACAP,IAAAA,UAAU,CAACW,WAAD,CAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCX,OAArC;AAEH,GAXD;;AAcE,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACN;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,eAQN;AAAA,kBACCE,WADD,aACCA,WADD,uBACCA,WAAW,CAAEa,GAAb,CAAiB,CAACC,EAAD,EAAIC,KAAJ,KAAc;AAElC,8BACI;AAAA,oCACA;AAAA,sCAAI;AAAO,gBAAA,QAAQ,EAAEZ,SAAjB;AAA6B,gBAAA,YAAY,EAChCW,EAAE,CAACE,GADZ;AACiB,gBAAA,IAAI,EAAC;AADtB;AAAA;AAAA;AAAA;AAAA,sBAAJ,EAEa,EAFb,eAGA;AAAA,0BAAQF,EAAE,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAKA;AAAA,wBAAKH,EAAE,CAACI;AAAR;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAA,qCACE,QAAC,MAAD;AACA,gBAAA,OAAO,EAAE,MAAMC,QAAQ,CAACC,UAAU,CAAC;AACbJ,kBAAAA,GAAG,EAAEK,CAAC,CAACL,GADM;AAEbM,kBAAAA,IAAI,EAAC;AAFQ,iBAAD,CAAX,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANA;AAAA,aAASR,EAAE,CAACE,GAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBC,SAnBE;AADD;AAAA;AAAA;AAAA;AAAA,cARM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAqCH,CAvDO;;GAAMpB,Y;UAEUH,W;;;KAFVG,Y","sourcesContent":["import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {Table, Button} from 'react-bootstrap';\n\nexport  const NotToDoLists = ({markAsToDo,noIndex,setNoIndex}) => {\n\n  const {notToDoList} = useSelector(state => state.task)\n\n  const ifChecked = e => {\n    const {checked, value} = e.target;\n    console.log(checked, value)\n    if(checked){\n      return setNoIndex([...noIndex, value])\n      \n    } \n      const removeIndex = noIndex.filter((item) => item !== value);\n      setNoIndex(removeIndex)\n      console.log(\"index after popping>>\", noIndex)\n   \n  }\n\n\n    return (\n        <>\n        <h2>Not to do Task</h2>\n        <Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>Task</th>\n      <th>Hours</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n  {notToDoList?.map((nt,index) => {\n\nreturn (\n    <tr key={nt._id}>\n    <td><input onChange={ifChecked}  defaultValue=\n                {nt._id} type=\"checkbox\" />\n                {\"\"}\n    <label>{nt.title}</label></td>\n    <td>{nt.hr}</td>\n    <td>\n      <Button \n      onClick={() => dispatch(taskSwitch({\n                            _id: t._id,\n                            todo:false,\n                          }))}> Add to Task </Button>\n      </td>\n    </tr>\n)\n\n})\n}\n  </tbody>\n</Table>\n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}