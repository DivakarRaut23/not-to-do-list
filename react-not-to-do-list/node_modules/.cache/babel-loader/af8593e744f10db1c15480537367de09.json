{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport { createTask, getTaskLists } from './api/taskApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]);\n  const [response, setResponse] = useState({\n    message: \"\",\n    status: \"\"\n  });\n  const [isPending, setIsPending] = useState(false);\n  useEffect(() => {\n    const initialTask = async () => {\n      const fetchTask = await getTaskLists();\n      fetchTask && fetchTask.length && setTaskList(fetchTask);\n    };\n\n    initialTask();\n  }, []);\n\n  const getAllTask = async () => {\n    const fetchTask = await getTaskLists();\n    fetchTask.length && setTaskList(fetchTask);\n  };\n\n  const handleOnAddTask = async formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      setIsPending(true);\n      const res = await createTask(formData);\n      setResponse(res);\n      setIsPending(false);\n      res.status === \"success\" && getAllTask();\n    }\n\n    const handleOnRemoveTask = index => {\n      const item = taskList[index];\n      const newArray = taskList.filter((item, i) => i !== index);\n      setTaskList(newArray);\n      setNotToDoList([...notToDoList, item]);\n      console.log(notToDoList);\n    };\n\n    const handleOnDeleteTask = () => {\n      console.log(\"index wala Array >>>>\", index);\n      console.log(\"NoIndex wala Array >>>>\", noIndex);\n\n      if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n        const updatedArray = taskList.filter((item, i) => !index.includes(i));\n        const updatedNotArray = notToDoList.filter((item, i) => !index.includes(i));\n        console.log(\"Updated array after delete>>\", updatedArray);\n        setTaskList(updatedArray);\n        setNotToDoList(updatedNotArray);\n        setIndex([]);\n        setNoIndex([]);\n      }\n    };\n\n    const markAsToDo = index => {\n      const item = notToDoList[index];\n      const newArray = notToDoList.filter((item, i) => i !== index);\n      setNotToDoList(newArray);\n      setTaskList([...taskList, item]);\n    };\n\n    const calcTotalHours = list => {\n      let total = 0;\n\n      for (let i = 0; i < list.length; i++) {\n        total = Number(list[i].hr) + total;\n      }\n\n      return total;\n    };\n\n    const hourSaved = calcTotalHours(notToDoList);\n    const hoursAllocated = calcTotalHours(taskList);\n    const totalHour = hourSaved + hoursAllocated;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-5\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \" NOT TO DO LIST \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [response.message && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: response.status === 'success' ? \"success\" : \"danger\",\n            children: [\" \", response.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 5\n          }, this), isPending && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n          handleOnAddTask: handleOnAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(TaskLists, {\n              taskLists: taskList,\n              handleOnRemoveTask: handleOnRemoveTask,\n              index: index,\n              setIndex: setIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n              notToDoList: notToDoList,\n              markAsToDo: markAsToDo,\n              noIndex: noIndex,\n              setNoIndex: setNoIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleOnDeleteTask(index),\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(TotalHr, {\n              totalHour: totalHour\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(HourSaved, {\n              hourSaved: hourSaved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(App, \"J4CiCKDj3AVIXcPSiST/cwNuaz8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","useEffect","Container","Row","Col","Button","Alert","Spinner","AddForm","TaskLists","NotToDoLists","TotalHr","HourSaved","createTask","getTaskLists","App","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","response","setResponse","message","status","isPending","setIsPending","initialTask","fetchTask","length","getAllTask","handleOnAddTask","formData","Number","hr","totalHour","alert","res","handleOnRemoveTask","item","newArray","filter","i","console","log","handleOnDeleteTask","window","confirm","updatedArray","includes","updatedNotArray","markAsToDo","calcTotalHours","list","total","hourSaved","hoursAllocated"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport {createTask, getTaskLists} from './api/taskApi.js';\n\n\n\nconst  App = () => {\n\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\nconst [response, setResponse] = useState({\n  message:\"\",\n  status: \"\"\n})\n\nconst [isPending, setIsPending] = useState(false)\n\nuseEffect(() => {\n\n  const initialTask = async () => {\n    const fetchTask = await getTaskLists();\n      fetchTask && fetchTask.length && setTaskList(fetchTask)\n\n\n  }\n  initialTask();\n\n  \n},[])\n\nconst getAllTask = async () => {\n\n  const fetchTask = await getTaskLists();\n      fetchTask.length && setTaskList(fetchTask)\n\n\n}\n\nconst handleOnAddTask =  async formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    setIsPending(true)\n    const res = await createTask(formData);\n    setResponse(res)\n    setIsPending(false)\n\n    res.status === \"success\" && getAllTask();\n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList[index];\n\n  const newArray = taskList.filter((item, i) => i !== index);\n  setTaskList(newArray)\n\n  setNotToDoList([...notToDoList, item]);\n\n  console.log(notToDoList)\n}\n\nconst handleOnDeleteTask = () => {\n  console.log(\"index wala Array >>>>\",index);\n  console.log(\"NoIndex wala Array >>>>\", noIndex)\n\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    const updatedNotArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated array after delete>>\", updatedArray)\n    setTaskList(updatedArray)\n    setNotToDoList(updatedNotArray)\n    setIndex([]);\n    setNoIndex([]);\n  } \n}\n\n\n\nconst markAsToDo = index => {\n\n  const item = notToDoList[index];\n  const newArray = notToDoList.filter((item, i) => i !== index);\n\n  setNotToDoList(newArray);\n\n  setTaskList([...taskList, item]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  } \n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\nconst hoursAllocated = calcTotalHours(taskList);\nconst totalHour = hourSaved + hoursAllocated ;\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n  <Row>\n    <Col>\n    <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n    </Col>\n  </Row>\n  <hr />\n  <div>\n    {response.message && \n    <Alert variant={response.status === 'success' ? \"success\" : \"danger\"}> {response.message}</Alert>\n    }\n    { isPending && \n    <Spinner animation=\"border\"></Spinner>\n  }\n  </div>\n  <AddForm handleOnAddTask={handleOnAddTask}/>\n  <hr/>\n  <Row>\n    <Col>\n    <TaskLists \n    taskLists={taskList}\n    handleOnRemoveTask={handleOnRemoveTask}\n    index={index}\n    setIndex={setIndex}\n    />\n    </Col>\n    <Col>\n    <NotToDoLists \n    notToDoList={notToDoList}\n    markAsToDo={markAsToDo}\n    noIndex={noIndex}\n    setNoIndex={setNoIndex}\n    />\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    <Button variant=\"danger\" onClick={() => handleOnDeleteTask(index)}> Delete </Button>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    <TotalHr totalHour={totalHour}/>\n    </Col>\n    <Col>\n     <HourSaved hourSaved={hourSaved}/>\n    </Col>\n  </Row>\n</Container>\n\n\n\n      \n    </div>\n  );\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}