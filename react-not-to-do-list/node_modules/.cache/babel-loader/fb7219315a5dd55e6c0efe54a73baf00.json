{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport axios from 'axios';\nimport { createTask } from './api/taskApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]);\n\n  const handleOnAddTask = async formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      const res = await createTask(formData); // setTaskList([...taskList, formData]);\n    }\n  };\n\n  const handleOnRemoveTask = index => {\n    const item = taskList[index];\n    const newArray = taskList.filter((item, i) => i !== index);\n    setTaskList(newArray);\n    setNotToDoList([...notToDoList, item]);\n    console.log(notToDoList);\n  };\n\n  const handleOnDeleteTask = () => {\n    console.log(\"index wala Array >>>>\", index);\n    console.log(\"NoIndex wala Array >>>>\", noIndex);\n\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const updatedArray = taskList.filter((item, i) => !index.includes(i));\n      const updatedNotArray = notToDoList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated array after delete>>\", updatedArray);\n      setTaskList(updatedArray);\n      setNotToDoList(updatedNotArray);\n      setIndex([]);\n      setNoIndex([]);\n    }\n  };\n\n  const markAsToDo = index => {\n    const item = notToDoList[index];\n    const newArray = notToDoList.filter((item, i) => i !== index);\n    setNotToDoList(newArray);\n    setTaskList([...taskList, item]);\n  };\n\n  const calcTotalHours = list => {\n    let total = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      total = Number(list[i].hr) + total;\n    }\n\n    return total;\n  };\n\n  const hourSaved = calcTotalHours(notToDoList);\n  const hoursAllocated = calcTotalHours(taskList);\n  const totalHour = hourSaved + hoursAllocated;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: \" Message from Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n        handleOnAddTask: handleOnAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {\n            taskLists: taskList,\n            handleOnRemoveTask: handleOnRemoveTask,\n            index: index,\n            setIndex: setIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n            notToDoList: notToDoList,\n            markAsToDo: markAsToDo,\n            noIndex: noIndex,\n            setNoIndex: setNoIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => handleOnDeleteTask(index),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(HourSaved, {\n            hourSaved: hourSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JuoekVFpR/mP8eJj6IEXSiuDdSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","Container","Row","Col","Button","Alert","Spinner","AddForm","TaskLists","NotToDoLists","TotalHr","HourSaved","axios","createTask","App","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","handleOnAddTask","formData","Number","hr","totalHour","alert","res","handleOnRemoveTask","item","newArray","filter","i","console","log","handleOnDeleteTask","window","confirm","updatedArray","includes","updatedNotArray","markAsToDo","calcTotalHours","list","total","length","hourSaved","hoursAllocated"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport axios from 'axios';\nimport {createTask} from './api/taskApi.js';\n\n\n\nconst  App = () => {\n\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\nconst handleOnAddTask =  async formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    const res = await createTask(formData);\n\n\n    // setTaskList([...taskList, formData]);\n\n  }  \n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList[index];\n\n  const newArray = taskList.filter((item, i) => i !== index);\n  setTaskList(newArray)\n\n  setNotToDoList([...notToDoList, item]);\n\n  console.log(notToDoList)\n}\n\nconst handleOnDeleteTask = () => {\n  console.log(\"index wala Array >>>>\",index);\n  console.log(\"NoIndex wala Array >>>>\", noIndex)\n\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    const updatedNotArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated array after delete>>\", updatedArray)\n    setTaskList(updatedArray)\n    setNotToDoList(updatedNotArray)\n    setIndex([]);\n    setNoIndex([]);\n  } \n}\n\n\n\nconst markAsToDo = index => {\n\n  const item = notToDoList[index];\n  const newArray = notToDoList.filter((item, i) => i !== index);\n\n  setNotToDoList(newArray);\n\n  setTaskList([...taskList, item]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  } \n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\nconst hoursAllocated = calcTotalHours(taskList);\nconst totalHour = hourSaved + hoursAllocated ;\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n  <Row>\n    <Col>\n    <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n    </Col>\n  </Row>\n  <hr />\n  <div>\n    <Alert variant=\"success\"> Message from Server</Alert>\n    <Spinner animation=\"\"></Spinner>\n  </div>\n  <AddForm handleOnAddTask={handleOnAddTask}/>\n  <hr/>\n  <Row>\n    <Col>\n    <TaskLists \n    taskLists={taskList}\n    handleOnRemoveTask={handleOnRemoveTask}\n    index={index}\n    setIndex={setIndex}\n    />\n    </Col>\n    <Col>\n    <NotToDoLists \n    notToDoList={notToDoList}\n    markAsToDo={markAsToDo}\n    noIndex={noIndex}\n    setNoIndex={setNoIndex}\n    />\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    <Button variant=\"danger\" onClick={() => handleOnDeleteTask(index)}> Delete </Button>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    <TotalHr totalHour={totalHour}/>\n    </Col>\n    <Col>\n     <HourSaved hourSaved={hourSaved}/>\n    </Col>\n  </Row>\n</Container>\n\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}