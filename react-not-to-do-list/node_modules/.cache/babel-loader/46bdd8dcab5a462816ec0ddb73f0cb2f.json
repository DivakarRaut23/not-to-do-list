{"ast":null,"code":"import { requestPending, addTaskSuccess, requestFail, fetchTaskSuccess } from './taskSlice.js';\nimport { createTask, getTaskLists, switchTask } from '../../api/taskApi.js';\nexport const addTask = formData => async dispatch => {\n  try {\n    dispatch(requestPending());\n    const result = await createTask(formData);\n    dispatch(addTaskSuccess(result));\n    result.status === \"success\" && dispatch(fetchTaskLists());\n  } catch (error) {\n    dispatch(requestFail(error.message));\n  }\n};\nexport const fetchTaskLists = () => async dispatch => {\n  try {\n    dispatch(requestPending());\n    const fetchTask = (await getTaskLists()) || [];\n    dispatch(fetchTaskSuccess(fetchTask));\n  } catch (error) {\n    dispatch(requestFail(error.message));\n  }\n};\nexport const taskSwitch = toUpdate => dispatch => {\n  try {} catch (error) {}\n};","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/taskAction.js"],"names":["requestPending","addTaskSuccess","requestFail","fetchTaskSuccess","createTask","getTaskLists","switchTask","addTask","formData","dispatch","result","status","fetchTaskLists","error","message","fetchTask","taskSwitch","toUpdate"],"mappings":"AAAA,SAAQA,cAAR,EAAuBC,cAAvB,EAAsCC,WAAtC,EAAmDC,gBAAnD,QAA0E,gBAA1E;AACA,SAAQC,UAAR,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAkD,sBAAlD;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACjD,MAAI;AACAA,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACA,UAAMU,MAAM,GAAG,MAAMN,UAAU,CAACI,QAAD,CAA/B;AACAC,IAAAA,QAAQ,CAACR,cAAc,CAACS,MAAD,CAAf,CAAR;AAEAA,IAAAA,MAAM,CAACC,MAAP,KAAkB,SAAlB,IAA+BF,QAAQ,CAACG,cAAc,EAAf,CAAvC;AAEH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZJ,IAAAA,QAAQ,CAACP,WAAW,CAACW,KAAK,CAACC,OAAP,CAAZ,CAAR;AACH;AACJ,CAXM;AAaP,OAAO,MAAMF,cAAc,GAAG,MAAM,MAAMH,QAAN,IAAkB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACA,UAAMe,SAAS,GAAG,OAAMV,YAAY,EAAlB,KAAwB,EAA1C;AACAI,IAAAA,QAAQ,CAACN,gBAAgB,CAACY,SAAD,CAAjB,CAAR;AAEH,GALD,CAKE,OAAOF,KAAP,EAAc;AACZJ,IAAAA,QAAQ,CAACP,WAAW,CAACW,KAAK,CAACC,OAAP,CAAZ,CAAR;AAEH;AACJ,CAVM;AAYP,OAAO,MAAME,UAAU,GAAGC,QAAQ,IAAIR,QAAQ,IAAI;AAC9C,MAAI,CAGH,CAHD,CAGE,OAAOI,KAAP,EAAc,CAEf;AACJ,CAPM","sourcesContent":["import {requestPending,addTaskSuccess,requestFail, fetchTaskSuccess} from './taskSlice.js'\nimport {createTask,getTaskLists, switchTask} from '../../api/taskApi.js'\n\nexport const addTask = formData => async dispatch => {\n    try {\n        dispatch(requestPending());\n        const result = await createTask(formData);\n        dispatch(addTaskSuccess(result))\n\n        result.status === \"success\" && dispatch(fetchTaskLists())\n        \n    } catch (error) {\n        dispatch(requestFail(error.message))\n    }\n}\n\nexport const fetchTaskLists = () => async dispatch => {\n    try {\n        dispatch(requestPending());\n        const fetchTask = await getTaskLists() || [];\n        dispatch(fetchTaskSuccess(fetchTask))\n        \n    } catch (error) {\n        dispatch(requestFail(error.message))\n        \n    }\n}\n\nexport const taskSwitch = toUpdate => dispatch => {\n    try {\n        \n        \n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}