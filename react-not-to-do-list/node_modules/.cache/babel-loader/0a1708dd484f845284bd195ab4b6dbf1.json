{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js\";\nimport React from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotToDoLists = ({\n  notToDoList,\n  markAsToDo,\n  handleOnDeleteLeisure,\n  noIndex,\n  setNoIndex\n}) => {\n  const ifChecked = e => {\n    const {\n      checked,\n      value\n    } = e.target;\n    console.log(checked, value);\n\n    if (checked) {\n      return setNoIndex([...noIndex, +value]);\n    }\n\n    const removeIndex = noindex.filter(item => item !== value);\n    setNoIndex(removeIndex);\n    console.log(\"index after popping>>\", index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not to do Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [notToDoList === null || notToDoList === void 0 ? void 0 : notToDoList.map((nt, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: ifChecked,\n                defaultValue: index,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 9\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: nt.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: nt.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => markAsToDo(index),\n                children: \" Add to Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 5\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleOnDeleteLeisure(noIndex),\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = NotToDoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotToDoLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js"],"names":["React","Table","Button","NotToDoLists","notToDoList","markAsToDo","handleOnDeleteLeisure","noIndex","setNoIndex","ifChecked","e","checked","value","target","console","log","removeIndex","noindex","filter","item","index","map","nt","title","hr"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;;;AAEA,OAAQ,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,UAAd;AAAyBC,EAAAA,qBAAzB;AAA+CC,EAAAA,OAA/C;AAAuDC,EAAAA;AAAvD,CAAD,KAAwE;AAEnG,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrB,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAmBF,CAAC,CAACG,MAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB;;AACA,QAAGD,OAAH,EAAW;AACT,aAAOH,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa,CAACK,KAAd,CAAD,CAAjB;AAED;;AACC,UAAMI,WAAW,GAAGC,OAAO,CAACC,MAAR,CAAgBC,IAAD,IAAUA,IAAI,KAAKP,KAAlC,CAApB;AACAJ,IAAAA,UAAU,CAACQ,WAAD,CAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCK,KAArC;AAEH,GAXD;;AAcE,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACN;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,eAQN;AAAA,mBACChB,WADD,aACCA,WADD,uBACCA,WAAW,CAAEiB,GAAb,CAAiB,CAACC,EAAD,EAAIF,KAAJ,KAAc;AAElC,8BACI;AAAA,oCACA;AAAA,sCAAI;AAAO,gBAAA,QAAQ,EAAEX,SAAjB;AAA6B,gBAAA,YAAY,EAChCW,KADT;AACgB,gBAAA,IAAI,EAAC;AADrB;AAAA;AAAA;AAAA;AAAA,sBAAJ,EAEa,EAFb,eAGA;AAAA,0BAAQE,EAAE,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAKA;AAAA,wBAAKD,EAAE,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMnB,UAAU,CAACe,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANA;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaC,SAfE,CADD,eAkBF;AAAA,iCACI;AAAA,yCAAK,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,QAAhB;AAAyB,cAAA,OAAO,EAAE,MAAMd,qBAAqB,CAACC,OAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBE;AAAA;AAAA;AAAA;AAAA;AAAA,cARM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAoCH,CApDO;KAAMJ,Y","sourcesContent":["import React from 'react'\nimport {Table, Button} from 'react-bootstrap';\n\nexport  const NotToDoLists = ({notToDoList, markAsToDo,handleOnDeleteLeisure,noIndex,setNoIndex}) => {\n\n  const ifChecked = e => {\n    const {checked, value} = e.target;\n    console.log(checked, value)\n    if(checked){\n      return setNoIndex([...noIndex, +value])\n      \n    } \n      const removeIndex = noindex.filter((item) => item !== value);\n      setNoIndex(removeIndex)\n      console.log(\"index after popping>>\", index)\n   \n  }\n\n\n    return (\n        <>\n        <h2>Not to do Task</h2>\n        <Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>Task</th>\n      <th>Hours</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n  {notToDoList?.map((nt,index) => {\n\nreturn (\n    <tr key={index}>\n    <td><input onChange={ifChecked}  defaultValue=\n                {index} type=\"checkbox\" />\n                {\"\"}\n    <label>{nt.title}</label></td>\n    <td>{nt.hr}</td>\n    <td>\n      <Button onClick={() => markAsToDo(index)}> Add to Task </Button>\n      </td>\n    </tr>\n)\n\n})\n}\n<tr>\n    <td> <Button variant=\"danger\" onClick={() => handleOnDeleteLeisure(noIndex)}> Delete </Button></td>\n</tr>\n  </tbody>\n</Table>\n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}