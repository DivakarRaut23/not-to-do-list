{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{Table,Button}from'react-bootstrap';import{taskSwitch}from'./taskAction.js';import{setItemToDelete}from'./taskSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TaskLists=function TaskLists(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.task;}),taskList=_useSelector.taskList,itemToDelete=_useSelector.itemToDelete;// const ifChecked = e => {\n//   const {checked, value} = e.target;\n//   console.log(checked, value)\n//   if(checked){\n//     return setIndex([...index, value])\n//   } \n//     const removeIndex = index.filter((item) => item !== value);\n//     setIndex(removeIndex)\n//     console.log(\"index after popping>>\", index)\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Task list\"}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hours\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:taskList===null||taskList===void 0?void 0:taskList.map(function(t){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return dispatch(setItemToDelete(e.target));},defaultValue:t._id,type:\"checkbox\",checked:itemToDelete.includes(t._id)}),\"\",/*#__PURE__*/_jsx(\"label\",{children:t.title})]}),/*#__PURE__*/_jsx(\"td\",{children:t.hr}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return dispatch(taskSwitch({_id:t._id,todo:false}));},children:\" Mark As Not To \"})})]},t._id);})})]})]});};","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/src/components/taskList/TaskLists.js"],"names":["React","useSelector","useDispatch","Table","Button","taskSwitch","setItemToDelete","TaskLists","dispatch","state","task","taskList","itemToDelete","map","t","e","target","_id","includes","title","hr","todo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAsC,aAAtC,CACA,OAAQC,KAAR,CAAeC,MAAf,KAA4B,iBAA5B,CACA,OAAQC,UAAR,KAAyB,iBAAzB,CACA,OAAQC,eAAR,KAA8B,aAA9B,C,6IAIA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAE3B,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAF2B,iBAKID,WAAW,CAAC,SAAAQ,KAAK,QAAKA,CAAAA,KAAK,CAACC,IAAX,EAAN,CALf,CAKtBC,QALsB,cAKtBA,QALsB,CAKZC,YALY,cAKZA,YALY,CAQ7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEE,mBACM,wCACA,iCADA,cAEA,MAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,IAAI,CAAC,IAAnC,wBACE,oCACE,mCACE,4BADF,cAEE,6BAFF,cAGE,8BAHF,GADF,EADF,cAQA,uBAEOD,QAFP,SAEOA,QAFP,iBAEOA,QAAQ,CAAEE,GAAV,CAAc,SAACC,CAAD,CAAO,CAElB,mBACI,mCACA,mCACA,cACA,QAAQ,CAAE,kBAACC,CAAD,QAAOP,CAAAA,QAAQ,CAACF,eAAe,CAACS,CAAC,CAACC,MAAH,CAAhB,CAAf,EADV,CAEA,YAAY,CAAEF,CAAC,CAACG,GAFhB,CAGA,IAAI,CAAC,UAHL,CAIA,OAAO,CAAEL,YAAY,CAACM,QAAb,CAAsBJ,CAAC,CAACG,GAAxB,CAJT,EADA,CAOC,EAPD,cAQA,uBAAQH,CAAC,CAACK,KAAV,EARA,GADA,cAUA,oBAAKL,CAAC,CAACM,EAAP,EAVA,cAWA,iCACE,KAAC,MAAD,EACA,OAAO,CAAE,yBAAMZ,CAAAA,QAAQ,CAACH,UAAU,CAAC,CACjCY,GAAG,CAAEH,CAAC,CAACG,GAD0B,CAEjCI,IAAI,CAAC,KAF4B,CAAD,CAAX,CAAd,EADT,8BADF,EAXA,GAASP,CAAC,CAACG,GAAX,CADJ,CAsBC,CAxBJ,CAFP,EARA,GAFA,GADN,CA4CH,CAjEM","sourcesContent":["import React from 'react'\nimport {useSelector, useDispatch}from 'react-redux'\nimport {Table, Button} from 'react-bootstrap'\nimport {taskSwitch} from './taskAction.js'\nimport {setItemToDelete} from './taskSlice'\n\n\n\nexport const TaskLists = () => {\n\n    const dispatch = useDispatch()\n\n\n  const {taskList, itemToDelete} = useSelector(state =>  state.task)\n \n\n  // const ifChecked = e => {\n  //   const {checked, value} = e.target;\n  //   console.log(checked, value)\n  //   if(checked){\n  //     return setIndex([...index, value])\n      \n  //   } \n  //     const removeIndex = index.filter((item) => item !== value);\n  //     setIndex(removeIndex)\n  //     console.log(\"index after popping>>\", index)\n   \n  // }\n         \n    return (\n          <>\n          <h2>Task list</h2>\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Task</th>\n                <th>Hours</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n          <tbody>\n            \n                {taskList?.map((t) => {\n\n                    return (\n                        <tr key={t._id}>\n                        <td>\n                        <input\n                        onChange={(e) => dispatch(setItemToDelete(e.target))}  \n                        defaultValue={t._id}\n                        type=\"checkbox\"\n                        checked={itemToDelete.includes(t._id)}\n                        />\n                        {\"\"}\n                        <label>{t.title}</label></td>\n                        <td>{t.hr}</td>\n                        <td>\n                          <Button \n                          onClick={() => dispatch(taskSwitch({\n                            _id: t._id,\n                            todo:false,\n                          }))}> Mark As Not To </Button>\n                          </td>\n                        </tr>\n                    )\n\n                    })\n                }\n                        \n          </tbody>\n        </Table>\n  </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}