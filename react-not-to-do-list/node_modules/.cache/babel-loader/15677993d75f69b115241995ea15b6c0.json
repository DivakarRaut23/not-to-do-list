{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { setItemToDelete } from './taskSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { taskSwitch } from '../taskList/taskAction';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotToDoLists = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    notToDoList,\n    itemToDelete\n  } = useSelector(state => state.task);\n  const totalSavedTime = notToDoList.reduce((subTtl, row) => subTtl + row.hr, 0);\n\n  const ifChecked = e => {\n    const {\n      checked,\n      value\n    } = e.target;\n    console.log(checked, value);\n\n    if (checked) {\n      return setNoIndex([...noIndex, value]);\n    }\n\n    const removeIndex = noIndex.filter(item => item !== value);\n    setNoIndex(removeIndex);\n    console.log(\"index after popping>>\", noIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not to do Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [notToDoList === null || notToDoList === void 0 ? void 0 : notToDoList.map((nt, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: ifChecked,\n                defaultValue: nt._id,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 9\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: nt.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: nt.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => dispatch(taskSwitch({\n                  _id: nt._id,\n                  todo: true\n                })),\n                children: \" Add to Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 5\n            }, this)]\n          }, nt._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: totalSavedTime > 0,\n              variant: \"success\",\n              children: [\"Total Hours Saved : \", totalSavedTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotToDoLists, \"YJusgQ9IfFaElkzUf/aDmhkxQH0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotToDoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotToDoLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js"],"names":["React","Alert","setItemToDelete","useSelector","useDispatch","taskSwitch","Table","Button","NotToDoLists","dispatch","notToDoList","itemToDelete","state","task","totalSavedTime","reduce","subTtl","row","hr","ifChecked","e","checked","value","target","console","log","setNoIndex","noIndex","removeIndex","filter","item","map","nt","index","_id","title","todo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Alert} from 'react-bootstrap';\nimport {setItemToDelete} from './taskSlice'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {taskSwitch} from '../taskList/taskAction'\nimport {Table, Button} from 'react-bootstrap';\n\nexport  const NotToDoLists = () => {\n\n  const dispatch = useDispatch()\n\n  const {notToDoList,itemToDelete} = useSelector(state => state.task)\n\n  const totalSavedTime = notToDoList.reduce((subTtl, row) => subTtl + row.hr,0)\n\n  const ifChecked = e => {\n    const {checked, value} = e.target;\n    console.log(checked, value)\n    if(checked){\n      return setNoIndex([...noIndex, value])\n      \n    } \n      const removeIndex = noIndex.filter((item) => item !== value);\n      setNoIndex(removeIndex)\n      console.log(\"index after popping>>\", noIndex)\n   \n  }\n\n\n    return (\n        <>\n        <h2>Not to do Task</h2>\n        <Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>Task</th>\n      <th>Hours</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n  {notToDoList?.map((nt,index) => {\n\nreturn (\n    <tr key={nt._id}>\n    <td><input \n    onChange={ifChecked}  defaultValue=\n                {nt._id} type=\"checkbox\" />\n                {\"\"}\n    <label>{nt.title}</label></td>\n    <td>{nt.hr}</td>\n    <td>\n      <Button \n      onClick={() => dispatch(taskSwitch({\n                            _id: nt._id,\n                            todo: true,\n                          }))}> Add to Task </Button>\n      </td>\n    </tr>\n)\n\n})\n}\n<tr>\n  <td colSpan=\"3\">\n  <Alert show={totalSavedTime>0}variant=\"success\">Total Hours Saved : {totalSavedTime}</Alert>\n  </td>\n</tr>\n  </tbody>\n</Table>\n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}