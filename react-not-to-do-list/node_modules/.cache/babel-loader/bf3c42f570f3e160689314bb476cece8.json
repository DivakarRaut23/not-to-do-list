{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { setItemToDelete } from '../taskList/taskSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { taskSwitch } from '../taskList/taskAction';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotToDoLists = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    notToDoList\n  } = useSelector(state => state.task);\n  const totalSavedTime = notToDoList.reduce((subTtl, row) => subTtl + row.hr, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not to do Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [notToDoList === null || notToDoList === void 0 ? void 0 : notToDoList.map((nt, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => dispatch(setItemToDelete(e.target)),\n                defaultValue: nt._id,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 9\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: nt.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: nt.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => dispatch(taskSwitch({\n                  _id: nt._id,\n                  todo: true\n                })),\n                children: \" Add to Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }, this)]\n          }, nt._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 5\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: totalSavedTime > 0,\n              variant: \"success\",\n              children: [\"Total Hours Saved : \", totalSavedTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotToDoLists, \"9OoqCYOciKned6IP8Ak9J2prX28=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotToDoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotToDoLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/notToDoLists/NotToDoLists.js"],"names":["React","Alert","setItemToDelete","useSelector","useDispatch","taskSwitch","Table","Button","NotToDoLists","dispatch","notToDoList","state","task","totalSavedTime","reduce","subTtl","row","hr","map","nt","index","e","target","_id","title","todo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;;;AAEA,OAAQ,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEjC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAgBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AAEA,QAAMC,cAAc,GAAGH,WAAW,CAACI,MAAZ,CAAmB,CAACC,MAAD,EAASC,GAAT,KAAiBD,MAAM,GAAGC,GAAG,CAACC,EAAjD,EAAoD,CAApD,CAAvB;AAEE,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACA;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAQN;AAAA,mBACCP,WADD,aACCA,WADD,uBACCA,WAAW,CAAEQ,GAAb,CAAiB,CAACC,EAAD,EAAIC,KAAJ,KAAc;AAElC,8BACI;AAAA,oCACA;AAAA,sCAAI;AACJ,gBAAA,QAAQ,EAAGC,CAAD,IAAOZ,QAAQ,CAACP,eAAe,CAACmB,CAAC,CAACC,MAAH,CAAhB,CADrB;AAEJ,gBAAA,YAAY,EACCH,EAAE,CAACI,GAHZ;AAGiB,gBAAA,IAAI,EAAC;AAHtB;AAAA;AAAA;AAAA;AAAA,sBAAJ,EAIa,EAJb,eAKA;AAAA,0BAAQJ,EAAE,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAOA;AAAA,wBAAKL,EAAE,CAACF;AAAR;AAAA;AAAA;AAAA;AAAA,oBAPA,eAQA;AAAA,qCACE,QAAC,MAAD;AACA,gBAAA,OAAO,EAAE,MAAMR,QAAQ,CAACJ,UAAU,CAAC;AACbkB,kBAAAA,GAAG,EAAEJ,EAAE,CAACI,GADK;AAEbE,kBAAAA,IAAI,EAAE;AAFO,iBAAD,CAAX,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA,aAASN,EAAE,CAACI,GAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAmBC,SArBE,CADD,eAwBF;AAAA,iCACE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,mCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEV,cAAc,GAAC,CAA5B;AAA8B,cAAA,OAAO,EAAC,SAAtC;AAAA,iDAAqEA,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBE;AAAA;AAAA;AAAA;AAAA;AAAA,cARM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AA4CH,CApDO;;GAAML,Y;UAEKJ,W,EAEKD,W;;;KAJVK,Y","sourcesContent":["import React from 'react'\nimport {Alert} from 'react-bootstrap';\nimport {setItemToDelete} from '../taskList/taskSlice'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {taskSwitch} from '../taskList/taskAction'\nimport {Table, Button} from 'react-bootstrap';\n\nexport  const NotToDoLists = () => {\n\n  const dispatch = useDispatch()\n\n  const {notToDoList} = useSelector(state => state.task)\n\n  const totalSavedTime = notToDoList.reduce((subTtl, row) => subTtl + row.hr,0)\n\n    return (\n        <>\n        <h2>Not to do Task</h2>\n        <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Hours</th>\n            <th>Action</th>\n          </tr>\n  </thead>\n  <tbody>\n  {notToDoList?.map((nt,index) => {\n\nreturn (\n    <tr key={nt._id}>\n    <td><input \n    onChange={(e) => dispatch(setItemToDelete(e.target))}\n    defaultValue=\n                {nt._id} type=\"checkbox\" />\n                {\"\"}\n    <label>{nt.title}</label></td>\n    <td>{nt.hr}</td>\n    <td>\n      <Button \n      onClick={() => dispatch(taskSwitch({\n                            _id: nt._id,\n                            todo: true,\n                          }))}> Add to Task </Button>\n      </td>\n    </tr>\n)\n\n})\n}\n<tr>\n  <td colSpan=\"3\">\n  <Alert show={totalSavedTime>0}variant=\"success\">Total Hours Saved : {totalSavedTime}</Alert>\n  </td>\n</tr>\n  </tbody>\n</Table>\n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}