{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { taskSwitch } from './taskAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskLists = ({\n  handleOnRemoveTask,\n  index,\n  setIndex\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    taskList\n  } = useSelector(state => state.task);\n\n  const ifChecked = e => {\n    const {\n      checked,\n      value\n    } = e.target;\n    console.log(checked, value);\n\n    if (checked) {\n      return setIndex([...index, value]);\n    }\n\n    const removeIndex = index.filter(item => item !== value);\n    setIndex(removeIndex);\n    console.log(\"index after popping>>\", index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskList === null || taskList === void 0 ? void 0 : taskList.map(t => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: ifChecked,\n                defaultValue: t._id,\n                type: \"checkbox\",\n                checked: index.includes(t._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: t.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: t.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleOnRemoveTask(t._id),\n                children: \" Mark As Not To \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, t._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskLists, \"8gAlNAi28yx/Sn9+Mp4Spe0vAfc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TaskLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js"],"names":["React","useSelector","useDispatch","Table","Button","taskSwitch","TaskLists","handleOnRemoveTask","index","setIndex","dispatch","taskList","state","task","ifChecked","e","checked","value","target","console","log","removeIndex","filter","item","map","t","_id","includes","title","hr"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAsC,aAAtC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;;;AAIA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,kBAAD;AAAoBC,EAAAA,KAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AAE9D,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAGF,QAAM;AAACS,IAAAA;AAAD,MAAaV,WAAW,CAACW,KAAK,IAAKA,KAAK,CAACC,IAAjB,CAA9B;;AAGA,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrB,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAmBF,CAAC,CAACG,MAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB;;AACA,QAAGD,OAAH,EAAW;AACT,aAAOP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,KAAX,CAAD,CAAf;AAED;;AACC,UAAMI,WAAW,GAAGb,KAAK,CAACc,MAAN,CAAcC,IAAD,IAAUA,IAAI,KAAKN,KAAhC,CAApB;AACAR,IAAAA,QAAQ,CAACY,WAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCZ,KAArC;AAEH,GAXD;;AAaE,sBACM;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQA;AAAA,kBAEOG,QAFP,aAEOA,QAFP,uBAEOA,QAAQ,CAAEa,GAAV,CAAeC,CAAD,IAAO;AAElB,8BACI;AAAA,oCACA;AAAA,sCACA;AAAO,gBAAA,QAAQ,EAAEX,SAAjB;AACA,gBAAA,YAAY,EAAEW,CAAC,CAACC,GADhB;AAEA,gBAAA,IAAI,EAAC,UAFL;AAGA,gBAAA,OAAO,EAAElB,KAAK,CAACmB,QAAN,CAAeF,CAAC,CAACC,GAAjB;AAHT;AAAA;AAAA;AAAA;AAAA,sBADA,EAMC,EAND,eAOA;AAAA,0BAAQD,CAAC,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,sBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eASA;AAAA,wBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,oBATA,eAUA;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMtB,kBAAkB,CAACkB,CAAC,CAACC,GAAH,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVA;AAAA,aAASD,CAAC,CAACC,GAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBC,SAnBJ;AAFP;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADN;AAuCH,CA5DM;;GAAMpB,S;UAEQJ,W,EAGAD,W;;;KALRK,S","sourcesContent":["import React from 'react'\nimport {useSelector, useDispatch}from 'react-redux'\nimport {Table, Button} from 'react-bootstrap'\nimport {taskSwitch} from './taskAction.js'\n\n\n\nexport const TaskLists = ({handleOnRemoveTask,index,setIndex}) => {\n\n    const dispatch = useDispatch()\n\n\n  const {taskList} = useSelector(state =>  state.task)\n \n\n  const ifChecked = e => {\n    const {checked, value} = e.target;\n    console.log(checked, value)\n    if(checked){\n      return setIndex([...index, value])\n      \n    } \n      const removeIndex = index.filter((item) => item !== value);\n      setIndex(removeIndex)\n      console.log(\"index after popping>>\", index)\n   \n  }\n         \n    return (\n          <>\n          <h2>Task list</h2>\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Task</th>\n                <th>Hours</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n          <tbody>\n            \n                {taskList?.map((t) => {\n\n                    return (\n                        <tr key={t._id}>\n                        <td>\n                        <input onChange={ifChecked}  \n                        defaultValue={t._id}\n                        type=\"checkbox\"\n                        checked={index.includes(t._id)}\n                        />\n                        {\"\"}\n                        <label>{t.title}</label></td>\n                        <td>{t.hr}</td>\n                        <td>\n                          <Button onClick={() => handleOnRemoveTask(t._id)}> Mark As Not To </Button>\n                          </td>\n                        </tr>\n                    )\n\n                    })\n                }\n                        \n          </tbody>\n        </Table>\n  </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}