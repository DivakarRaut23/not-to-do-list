{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { createTask, getTaskLists, switchTask, deleteTaskLists } from './api/taskApi.js'; // from taskAction js \n\nimport { addTask, fetchTaskLists } from './components/taskList/taskAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isPending,\n    status,\n    message,\n    totalHour\n  } = useSelector(state => state.task); // local state\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]); // const [isPending, setIsPending] = useState(false)\n\n  useEffect(() => {\n    dispatch(fetchTaskLists());\n  }, []); // useEffect(() => {\n  //   const initialTask = async () => {\n  //     const fetchTask = await getTaskLists();\n  //     const toData = fetchTask.filter((noList) => noList.todo)\n  //     const notTOdata = fetchTask.filter((noList) => !noList.todo)\n  //       fetchTask && fetchTask.length && setTaskList(toData)\n  //       notTOdata && notTOdata.length && setNotToDoList(notTOdata)\n  //   }\n  //   initialTask();\n  // },[])\n\n  const getAllTask = async () => {\n    const fetchTask = (await getTaskLists()) || [];\n    const toData = fetchTask.filter(noList => noList.todo);\n    const notTOdata = fetchTask.filter(noList => !noList.todo);\n    setTaskList(toData);\n    setNotToDoList(notTOdata);\n  };\n\n  const handleOnAddTask = async formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      dispatch(addTask(formData));\n    }\n  };\n\n  const handleOnDeleteTask = () => {\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const totalIndex = index.concat(noIndex);\n      console.log(\"Jodeko Index >>>\", totalIndex);\n      const updatedArray = taskList.filter((item, i) => !index.includes(i));\n      const updatedNotArray = notToDoList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated index after delete>>\", updatedArray);\n      console.log(\"Updated no index after delete>>\", updatedNotArray);\n      setTaskList(updatedArray);\n      setNotToDoList(updatedNotArray);\n      setIndex([]);\n      setNoIndex([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: status === 'success' ? \"success\" : \"danger\",\n          children: [\" \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), isPending && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => handleOnDeleteTask(index),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"3a5gK8vzieREbF8NVhKs3T59icc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","useEffect","useDispatch","useSelector","Container","Row","Col","Button","Alert","Spinner","AddForm","TotalHr","TaskLists","NotToDoLists","createTask","getTaskLists","switchTask","deleteTaskLists","addTask","fetchTaskLists","App","dispatch","isPending","status","message","totalHour","state","task","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","getAllTask","fetchTask","toData","filter","noList","todo","notTOdata","handleOnAddTask","formData","Number","hr","alert","handleOnDeleteTask","window","confirm","totalIndex","concat","console","log","updatedArray","item","i","includes","updatedNotArray"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TotalHr} from './components/totalHour/TotalHr'\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\n\nimport {createTask, getTaskLists,switchTask,deleteTaskLists} from './api/taskApi.js';\n\n// from taskAction js \n\nimport {addTask,fetchTaskLists} from './components/taskList/taskAction'\n\nconst  App = () => {\n  const dispatch =  useDispatch()\n\nconst {isPending,status, message, totalHour } = useSelector(state => state.task)\n\n// local state\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\n\n\n// const [isPending, setIsPending] = useState(false)\n\n\nuseEffect(() => {\n\n  dispatch(fetchTaskLists())\n  \n}, [])\n\n// useEffect(() => {\n\n//   const initialTask = async () => {\n//     const fetchTask = await getTaskLists();\n//     const toData = fetchTask.filter((noList) => noList.todo)\n//     const notTOdata = fetchTask.filter((noList) => !noList.todo)\n//       fetchTask && fetchTask.length && setTaskList(toData)\n//       notTOdata && notTOdata.length && setNotToDoList(notTOdata)\n\n\n//   }\n//   initialTask();\n\n  \n// },[])\n\nconst getAllTask = async () => {\n\n  const fetchTask = await getTaskLists() || [];\n\n  const toData = fetchTask.filter((noList) => noList.todo)\n\n  const notTOdata = fetchTask.filter((noList) => !noList.todo)\n\n    setTaskList(toData)\n    setNotToDoList(notTOdata)\n\n}\n\nconst handleOnAddTask =  async formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n   dispatch(addTask(formData))\n}\n}\n\n\n\nconst handleOnDeleteTask = () => {\n  \n\n\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const totalIndex = index.concat(noIndex)\n\n    console.log(\"Jodeko Index >>>\", totalIndex)\n\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    const updatedNotArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated index after delete>>\", updatedArray)\n    console.log(\"Updated no index after delete>>\", updatedNotArray)\n    setTaskList(updatedArray)\n    setNotToDoList(updatedNotArray)\n    setIndex([]);\n    setNoIndex([]);\n  } \n}\n\n\n  return (\n          <div className=\"App\">\n                <Container>\n            <Row>\n              <Col>\n              <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n              </Col>\n            </Row>\n            <hr />\n            <div>\n              {message && \n              <Alert variant={status === 'success' ? \"success\" : \"danger\"}> {message}</Alert>\n              }\n              { isPending && \n              <Spinner animation=\"border\"></Spinner>\n            }\n            </div>\n            <AddForm />\n            <hr/>\n            <Row>\n              <Col>\n              <TaskLists />\n              </Col>\n              <Col>\n              <NotToDoLists \n              \n              />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Button variant=\"danger\" onClick={() => handleOnDeleteTask(index)}> Delete </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <TotalHr totalHour={totalHour}/>\n              </Col>\n              <Col>\n              \n              </Col>\n            </Row>\n          </Container>\n          \n          </div>\n  );\n}\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}