{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { taskSwitch } from './taskAction.js';\nimport { setItemToDelete } from './taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskLists = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    taskList,\n    itemToDelete\n  } = useSelector(state => state.task); // const ifChecked = e => {\n  //   const {checked, value} = e.target;\n  //   console.log(checked, value)\n  //   if(checked){\n  //     return setIndex([...index, value])\n  //   } \n  //     const removeIndex = index.filter((item) => item !== value);\n  //     setIndex(removeIndex)\n  //     console.log(\"index after popping>>\", index)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskList === null || taskList === void 0 ? void 0 : taskList.map(t => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => dispatch(setItemToDelete(e.target)),\n                defaultValue: t._id,\n                type: \"checkbox\",\n                checked: ite.includes(t._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                children: t.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: t.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => dispatch(taskSwitch({\n                  _id: t._id,\n                  todo: false\n                })),\n                children: \" Mark As Not To \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, t._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskLists, \"uF3duVkze3tWQAbNdMPRgIz7I8k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TaskLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskLists\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/components/taskList/TaskLists.js"],"names":["React","useSelector","useDispatch","Table","Button","taskSwitch","setItemToDelete","TaskLists","dispatch","taskList","itemToDelete","state","task","map","t","e","target","_id","ite","includes","title","hr","todo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAsC,aAAtC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,eAAR,QAA8B,aAA9B;;;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAGF,QAAM;AAACO,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA2BT,WAAW,CAACU,KAAK,IAAKA,KAAK,CAACC,IAAjB,CAA5C,CAL6B,CAQ7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEE,sBACM;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQA;AAAA,kBAEOH,QAFP,aAEOA,QAFP,uBAEOA,QAAQ,CAAEI,GAAV,CAAeC,CAAD,IAAO;AAElB,8BACI;AAAA,oCACA;AAAA,sCACA;AACA,gBAAA,QAAQ,EAAGC,CAAD,IAAOP,QAAQ,CAACF,eAAe,CAACS,CAAC,CAACC,MAAH,CAAhB,CADzB;AAEA,gBAAA,YAAY,EAAEF,CAAC,CAACG,GAFhB;AAGA,gBAAA,IAAI,EAAC,UAHL;AAIA,gBAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL,CAAC,CAACG,GAAf;AAJT;AAAA;AAAA;AAAA;AAAA,sBADA,EAOC,EAPD,eAQA;AAAA,0BAAQH,CAAC,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,sBARA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAUA;AAAA,wBAAKN,CAAC,CAACO;AAAP;AAAA;AAAA;AAAA;AAAA,oBAVA,eAWA;AAAA,qCACE,QAAC,MAAD;AACA,gBAAA,OAAO,EAAE,MAAMb,QAAQ,CAACH,UAAU,CAAC;AACjCY,kBAAAA,GAAG,EAAEH,CAAC,CAACG,GAD0B;AAEjCK,kBAAAA,IAAI,EAAC;AAF4B,iBAAD,CAAX,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXA;AAAA,aAASR,CAAC,CAACG,GAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAsBC,SAxBJ;AAFP;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADN;AA4CH,CAjEM;;GAAMV,S;UAEQL,W,EAGcD,W;;;KALtBM,S","sourcesContent":["import React from 'react'\nimport {useSelector, useDispatch}from 'react-redux'\nimport {Table, Button} from 'react-bootstrap'\nimport {taskSwitch} from './taskAction.js'\nimport {setItemToDelete} from './taskSlice'\n\n\n\nexport const TaskLists = () => {\n\n    const dispatch = useDispatch()\n\n\n  const {taskList, itemToDelete} = useSelector(state =>  state.task)\n \n\n  // const ifChecked = e => {\n  //   const {checked, value} = e.target;\n  //   console.log(checked, value)\n  //   if(checked){\n  //     return setIndex([...index, value])\n      \n  //   } \n  //     const removeIndex = index.filter((item) => item !== value);\n  //     setIndex(removeIndex)\n  //     console.log(\"index after popping>>\", index)\n   \n  // }\n         \n    return (\n          <>\n          <h2>Task list</h2>\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Task</th>\n                <th>Hours</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n          <tbody>\n            \n                {taskList?.map((t) => {\n\n                    return (\n                        <tr key={t._id}>\n                        <td>\n                        <input\n                        onChange={(e) => dispatch(setItemToDelete(e.target))}  \n                        defaultValue={t._id}\n                        type=\"checkbox\"\n                        checked={ite.includes(t._id)}\n                        />\n                        {\"\"}\n                        <label>{t.title}</label></td>\n                        <td>{t.hr}</td>\n                        <td>\n                          <Button \n                          onClick={() => dispatch(taskSwitch({\n                            _id: t._id,\n                            todo:false,\n                          }))}> Mark As Not To </Button>\n                          </td>\n                        </tr>\n                    )\n\n                    })\n                }\n                        \n          </tbody>\n        </Table>\n  </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}