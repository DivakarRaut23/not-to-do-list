{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists'; // from taskAction js \n\nimport { fetchTaskLists, deleteTasks } from './components/taskList/taskAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isPending,\n    status,\n    message,\n    totalHour,\n    itemToDelete\n  } = useSelector(state => state.task);\n  useEffect(() => {\n    dispatch(fetchTaskLists());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: status === 'success' ? \"success\" : \"danger\",\n          children: [\" \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), isPending && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => dispatch(deleteTasks(itemToDelete)),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"lFKsGggPEuyl1ddWzmOMLD97hb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useEffect","useDispatch","useSelector","Container","Row","Col","Button","Alert","Spinner","AddForm","TotalHr","TaskLists","NotToDoLists","fetchTaskLists","deleteTasks","App","dispatch","isPending","status","message","totalHour","itemToDelete","state","task"],"mappings":"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","sourcesContent":["import {useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TotalHr} from './components/totalHour/TotalHr'\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\n\n\n// from taskAction js \n\nimport {fetchTaskLists,deleteTasks} from './components/taskList/taskAction'\n\nconst  App = () => {\n  const dispatch =  useDispatch()\n\nconst {isPending,status, message, totalHour, itemToDelete} = useSelector(state => state.task)\n\n\nuseEffect(() => {\n\n  dispatch(fetchTaskLists())\n  \n}, [dispatch])\n\n\n\n\n\n\n  return (\n          <div className=\"App\">\n                <Container>\n            <Row>\n              <Col>\n              <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n              </Col>\n            </Row>\n            <hr />\n            <div>\n              {message && \n              <Alert variant={status === 'success' ? \"success\" : \"danger\"}> {message}</Alert>\n              }\n              { isPending && \n              <Spinner animation=\"border\"></Spinner>\n            }\n            </div>\n            <AddForm />\n            <hr/>\n            <Row>\n              <Col>\n              <TaskLists />\n              </Col>\n              <Col>\n              <NotToDoLists />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Button variant=\"danger\" onClick={() => dispatch(deleteTasks(itemToDelete))}> Delete </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <TotalHr totalHour={totalHour}/>\n              </Col>\n              <Col>\n              \n              </Col>\n            </Row>\n          </Container>\n          \n          </div>\n  );\n}\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}