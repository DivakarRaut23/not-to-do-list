{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport { createTask, getTaskLists, switchTask, deleteTaskLists } from './api/taskApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    isPending\n  } = useSelector(state => state.task); // local state\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]);\n  const [response, setResponse] = useState({\n    message: \"\",\n    status: \"\"\n  }); // const [isPending, setIsPending] = useState(false)\n\n  useEffect(() => {\n    const initialTask = async () => {\n      const fetchTask = await getTaskLists();\n      const toData = fetchTask.filter(noList => noList.todo);\n      const notTOdata = fetchTask.filter(noList => !noList.todo);\n      fetchTask && fetchTask.length && setTaskList(toData);\n      notTOdata && notTOdata.length && setNotToDoList(notTOdata);\n    };\n\n    initialTask();\n  }, []);\n\n  const getAllTask = async () => {\n    const fetchTask = (await getTaskLists()) || [];\n    const toData = fetchTask.filter(noList => noList.todo);\n    const notTOdata = fetchTask.filter(noList => !noList.todo);\n    setTaskList(toData);\n    setNotToDoList(notTOdata);\n  };\n\n  const handleOnAddTask = async formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      // setIsPending(true)\n      const res = await createTask(formData);\n      setResponse(res);\n      setIsPending(false);\n      res.status === \"success\" && getAllTask();\n    }\n  };\n\n  const handleOnRemoveTask = index => {\n    const item = taskList[index];\n    const newArray = taskList.filter((item, i) => i !== index);\n    setTaskList(newArray);\n    setNotToDoList([...notToDoList, item]);\n    console.log(notToDoList);\n  };\n\n  const handleOnDeleteTask = () => {\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const totalIndex = index.concat(noIndex);\n      console.log(\"Jodeko Index >>>\", totalIndex);\n      const updatedArray = taskList.filter((item, i) => !index.includes(i));\n      const updatedNotArray = notToDoList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated index after delete>>\", updatedArray);\n      console.log(\"Updated no index after delete>>\", updatedNotArray);\n      setTaskList(updatedArray);\n      setNotToDoList(updatedNotArray);\n      setIndex([]);\n      setNoIndex([]);\n    }\n  };\n\n  const markAsToDo = index => {\n    const item = notToDoList[index];\n    const newArray = notToDoList.filter((item, i) => i !== index);\n    setNotToDoList(newArray);\n    setTaskList([...taskList, item]);\n  };\n\n  const calcTotalHours = list => {\n    let total = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      total = Number(list[i].hr) + total;\n    }\n\n    return total;\n  };\n\n  const hourSaved = calcTotalHours(notToDoList);\n  const hoursAllocated = calcTotalHours(taskList);\n  const totalHour = hourSaved + hoursAllocated;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [response.message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: response.status === 'success' ? \"success\" : \"danger\",\n          children: [\" \", response.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), isPending && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n        handleOnAddTask: handleOnAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {\n            taskList: taskList,\n            handleOnRemoveTask: handleOnRemoveTask,\n            index: index,\n            setIndex: setIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n            notToDoList: notToDoList,\n            markAsToDo: markAsToDo,\n            noIndex: noIndex,\n            setNoIndex: setNoIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => handleOnDeleteTask(index),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(HourSaved, {\n            hourSaved: hourSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"9wl+amue04/5CZ4KVPrgxcJsvtg=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","useEffect","useSelector","Container","Row","Col","Button","Alert","Spinner","AddForm","TaskLists","NotToDoLists","TotalHr","HourSaved","createTask","getTaskLists","switchTask","deleteTaskLists","App","isPending","state","task","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","response","setResponse","message","status","initialTask","fetchTask","toData","filter","noList","todo","notTOdata","length","getAllTask","handleOnAddTask","formData","Number","hr","totalHour","alert","res","setIsPending","handleOnRemoveTask","item","newArray","i","console","log","handleOnDeleteTask","window","confirm","totalIndex","concat","updatedArray","includes","updatedNotArray","markAsToDo","calcTotalHours","list","total","hourSaved","hoursAllocated"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport {useSelector} from 'react-redux'\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport {createTask, getTaskLists,switchTask,deleteTaskLists} from './api/taskApi.js';\n\n\n\nconst  App = () => {\n\nconst {isPending} = useSelector(state => state.task)\n\n// local state\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\nconst [response, setResponse] = useState({\n  message:\"\",\n  status: \"\"\n})\n\n// const [isPending, setIsPending] = useState(false)\n\nuseEffect(() => {\n\n  const initialTask = async () => {\n    const fetchTask = await getTaskLists();\n    const toData = fetchTask.filter((noList) => noList.todo)\n    const notTOdata = fetchTask.filter((noList) => !noList.todo)\n      fetchTask && fetchTask.length && setTaskList(toData)\n      notTOdata && notTOdata.length && setNotToDoList(notTOdata)\n\n\n  }\n  initialTask();\n\n  \n},[])\n\nconst getAllTask = async () => {\n\n  const fetchTask = await getTaskLists() || [];\n\n  const toData = fetchTask.filter((noList) => noList.todo)\n\n  const notTOdata = fetchTask.filter((noList) => !noList.todo)\n\n    setTaskList(toData)\n    setNotToDoList(notTOdata)\n\n}\n\nconst handleOnAddTask =  async formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    // setIsPending(true)\n    const res = await createTask(formData);\n    setResponse(res)\n    setIsPending(false)\n\n    res.status === \"success\" && getAllTask();\n}\n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList[index];\n\n  const newArray = taskList.filter((item, i) => i !== index);\n  setTaskList(newArray)\n\n  setNotToDoList([...notToDoList, item]);\n\n  console.log(notToDoList)\n}\n\nconst handleOnDeleteTask = () => {\n  \n\n\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const totalIndex = index.concat(noIndex)\n\n    console.log(\"Jodeko Index >>>\", totalIndex)\n\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    const updatedNotArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated index after delete>>\", updatedArray)\n    console.log(\"Updated no index after delete>>\", updatedNotArray)\n    setTaskList(updatedArray)\n    setNotToDoList(updatedNotArray)\n    setIndex([]);\n    setNoIndex([]);\n  } \n}\n\n\n\nconst markAsToDo = index => {\n\n  const item = notToDoList[index];\n  const newArray = notToDoList.filter((item, i) => i !== index);\n\n  setNotToDoList(newArray);\n\n  setTaskList([...taskList, item]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  }\n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\nconst hoursAllocated = calcTotalHours(taskList);\nconst totalHour = hourSaved + hoursAllocated ;\n\n\n  return (\n          <div className=\"App\">\n                <Container>\n            <Row>\n              <Col>\n              <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n              </Col>\n            </Row>\n            <hr />\n            <div>\n              {response.message && \n              <Alert variant={response.status === 'success' ? \"success\" : \"danger\"}> {response.message}</Alert>\n              }\n              { isPending && \n              <Spinner animation=\"border\"></Spinner>\n            }\n            </div>\n            <AddForm handleOnAddTask={handleOnAddTask}/>\n            <hr/>\n            <Row>\n              <Col>\n              <TaskLists \n              taskList={taskList}\n              handleOnRemoveTask={handleOnRemoveTask}\n              index={index}\n              setIndex={setIndex}\n              />\n              </Col>\n              <Col>\n              <NotToDoLists \n              notToDoList={notToDoList}\n              markAsToDo={markAsToDo}\n              noIndex={noIndex}\n              setNoIndex={setNoIndex}\n              />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Button variant=\"danger\" onClick={() => handleOnDeleteTask(index)}> Delete </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <TotalHr totalHour={totalHour}/>\n              </Col>\n              <Col>\n              <HourSaved hourSaved={hourSaved}/>\n              </Col>\n            </Row>\n          </Container>\n          \n          </div>\n  );\n}\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}