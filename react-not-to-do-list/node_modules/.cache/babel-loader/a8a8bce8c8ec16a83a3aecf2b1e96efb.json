{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]);\n\n  const handleOnAddTask = formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      setTaskList([...taskList, formData]);\n    }\n  };\n\n  const handleOnRemoveTask = index => {\n    const item = taskList[index];\n    const newArray = taskList.filter((item, i) => i !== index);\n    setTaskList(newArray);\n    setNotToDoList([...notToDoList, item]);\n    console.log(notToDoList);\n  };\n\n  const handleOnDeleteTask = index => {\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const updatedArray = taskList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated array after delete>>\", updatedArray);\n      setTaskList(updatedArray);\n      setIndex([]);\n    }\n  };\n\n  const handleOnDeleteLeisure = index => {\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const updatedArray = notToDoList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated array after delete>>\", updatedArray);\n      setNotToDoList(updatedArray);\n      setNoIndex([]);\n    }\n  };\n\n  const markAsToDo = index => {\n    const item = notToDoList[index];\n    const newArray = notToDoList.filter((item, i) => i !== index);\n    setNotToDoList(newArray);\n    setTaskList([...taskList, item]);\n  };\n\n  const calcTotalHours = list => {\n    let total = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      total = Number(list[i].hr) + total;\n    }\n\n    return total;\n  };\n\n  const hourSaved = calcTotalHours(notToDoList);\n  const hoursAllocated = calcTotalHours(taskList);\n  const totalHour = hourSaved + hoursAllocated;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n        handleOnAddTask: handleOnAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {\n            taskLists: taskList,\n            handleOnRemoveTask: handleOnRemoveTask,\n            handleOnDeleteTask: handleOnDeleteTask,\n            index: index,\n            setIndex: setIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n            notToDoList: notToDoList,\n            markAsToDo: markAsToDo,\n            handleOnDeleteLeisure: handleOnDeleteLeisure,\n            noIndex: noIndex,\n            setNoIndex: setNoIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(HourSaved, {\n            hourSaved: hourSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JuoekVFpR/mP8eJj6IEXSiuDdSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","Container","Row","Col","AddForm","TaskLists","NotToDoLists","TotalHr","HourSaved","App","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","handleOnAddTask","formData","Number","hr","totalHour","alert","handleOnRemoveTask","item","newArray","filter","i","console","log","handleOnDeleteTask","window","confirm","updatedArray","includes","handleOnDeleteLeisure","markAsToDo","calcTotalHours","list","total","length","hourSaved","hoursAllocated"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport { Container, Row, Col }from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\n\n\n\nconst  App = () => {\n\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\nconst handleOnAddTask = formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    setTaskList([...taskList, formData]);\n\n  }  \n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList[index];\n\n  const newArray = taskList.filter((item, i) => i !== index);\n  setTaskList(newArray)\n\n  setNotToDoList([...notToDoList, item]);\n\n  console.log(notToDoList)\n}\n\nconst handleOnDeleteTask = (index) => {\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated array after delete>>\", updatedArray)\n    setTaskList(updatedArray)\n    setIndex([]);\n  } \n}\n\nconst handleOnDeleteLeisure = (index) => {\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const updatedArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated array after delete>>\", updatedArray)\n    setNotToDoList(updatedArray)\n    setNoIndex([]);\n  } \n}\n\nconst markAsToDo = index => {\n\n  const item = notToDoList[index];\n  const newArray = notToDoList.filter((item, i) => i !== index);\n\n  setNotToDoList(newArray);\n\n  setTaskList([...taskList, item]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  } \n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\nconst hoursAllocated = calcTotalHours(taskList);\nconst totalHour = hourSaved + hoursAllocated ;\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n  <Row>\n    <Col>\n    <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n    </Col>\n  </Row>\n  <hr />\n  <AddForm handleOnAddTask={handleOnAddTask}/>\n  <hr/>\n  <Row>\n    <Col>\n    <TaskLists \n    taskLists={taskList}\n    handleOnRemoveTask={handleOnRemoveTask}\n    handleOnDeleteTask={handleOnDeleteTask}\n    index={index}\n    setIndex={setIndex}\n    />\n    </Col>\n    <Col>\n    <NotToDoLists \n    notToDoList={notToDoList}\n    markAsToDo={markAsToDo}\n    handleOnDeleteLeisure={handleOnDeleteLeisure}\n    noIndex={noIndex}\n    setNoIndex={setNoIndex}\n    />\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    <TotalHr totalHour={totalHour}/>\n    </Col>\n    <Col>\n     <HourSaved hourSaved={hourSaved}/>\n    </Col>\n  </Row>\n</Container>\n\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}