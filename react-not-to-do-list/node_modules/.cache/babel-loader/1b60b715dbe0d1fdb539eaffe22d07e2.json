{"ast":null,"code":"import _defineProperty from\"/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import{Form,Row,Col,Button}from'react-bootstrap';import{addTask}from'../taskList/taskAction.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialFormData={title:\"test\",hr:10};export var AddForm=function AddForm(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.task;}),totalHour=_useSelector.totalHour;var _useState=useState(initialFormData),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var handleOnChange=function handleOnChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},name,name===\"hr\"?+value:value)));};var handleOnSubmit=function handleOnSubmit(e){e.preventDefault();if(task.hr+totalHour>168){return alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");}dispatch(addTask(task));};return/*#__PURE__*/_jsx(Form,{onSubmit:handleOnSubmit,children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{onChange:handleOnChange,placeholder:\"Task Name\",value:task.title,name:\"title\"})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{onChange:handleOnChange,placeholder:\"Number of hours\",type:\"number\",value:task.hr,name:\"hr\"})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\" Add\"})})]})});};","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/full-stack-ntdl/react-not-to-do-list/src/components/form/Addform.js"],"names":["React","useState","useSelector","useDispatch","Form","Row","Col","Button","addTask","initialFormData","title","hr","AddForm","dispatch","state","task","totalHour","setTask","handleOnChange","e","target","name","value","handleOnSubmit","preventDefault","alert"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,IAAR,CAAcC,GAAd,CAAmBC,GAAnB,CAAuBC,MAAvB,KAAoC,iBAApC,CACA,OAAQC,OAAR,KAAsB,2BAAtB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,MADa,CAEpBC,EAAE,CAAE,EAFgB,CAAxB,CAMA,MAAQ,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAE1B,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAF0B,iBAIND,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAJL,CAInBC,SAJmB,cAInBA,SAJmB,eAMNf,QAAQ,CAACQ,eAAD,CANF,wCAMvBM,IANuB,eAMjBE,OANiB,eAQ9B,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,CAAC,CAAI,eACHA,CAAC,CAACC,MADC,CACjBC,IADiB,WACjBA,IADiB,CACZC,KADY,WACZA,KADY,CAExBL,OAAO,gCACDF,IADC,wBAEHM,IAFG,CAEKA,IAAI,GAAK,IAAT,CAAgB,CAACC,KAAjB,CAAyBA,KAF9B,GAAP,CAIH,CAND,CAQA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAJ,CAAC,CAAI,CACxBA,CAAC,CAACK,cAAF,GACA,GAAIT,IAAI,CAACJ,EAAL,CAAUK,SAAV,CAAsB,GAA1B,CAAgC,CAC7B,MAAOS,CAAAA,KAAK,CAAC,oEAAD,CAAZ,CACC,CACFZ,QAAQ,CAACL,OAAO,CAACO,IAAD,CAAR,CAAR,CACD,CANL,CAQI,mBACQ,KAAC,IAAD,EAAM,QAAQ,CAAEQ,cAAhB,uBACA,MAAC,GAAD,yBACI,KAAC,GAAD,wBACA,KAAC,IAAD,CAAM,OAAN,EACA,QAAQ,CAAEL,cADV,CAEA,WAAW,CAAC,WAFZ,CAGA,KAAK,CAAEH,IAAI,CAACL,KAHZ,CAIA,IAAI,CAAC,OAJL,EADA,EADJ,cASI,KAAC,GAAD,wBACA,KAAC,IAAD,CAAM,OAAN,EACA,QAAQ,CAAEQ,cADV,CAEA,WAAW,CAAC,iBAFZ,CAGA,IAAI,CAAC,QAHL,CAIA,KAAK,CAAEH,IAAI,CAACJ,EAJZ,CAKA,IAAI,CAAC,IALL,EADA,EATJ,cAkBI,KAAC,GAAD,wBACA,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,kBADA,EAlBJ,GADA,EADR,CA0BH,CAlDO","sourcesContent":["import React,{useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Form, Row, Col,Button} from 'react-bootstrap';\nimport {addTask} from '../taskList/taskAction.js'\n\nconst initialFormData = {\n    title: \"test\",\n    hr: 10, \n}\n\n\nexport  const AddForm = () => {\n\n    const dispatch = useDispatch()\n\n    const {totalHour} = useSelector(state => state.task)\n\nconst [task, setTask] = useState(initialFormData);\n\nconst handleOnChange = e => {\n    const {name,value} = e.target \n    setTask({\n       ...task, \n       [name] : name === \"hr\" ? +value : value,\n    })\n}\n\nconst handleOnSubmit = e => {\n    e.preventDefault ();\n    if (task.hr + totalHour > 168 ) {\n       return alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n       } \n      dispatch(addTask(task))\n    }\n    \n    return (\n            <Form onSubmit={handleOnSubmit}>\n            <Row>\n                <Col>\n                <Form.Control \n                onChange={handleOnChange}\n                placeholder=\"Task Name\" \n                value={task.title}\n                name=\"title\"\n                />\n                </Col>\n                <Col>\n                <Form.Control\n                onChange={handleOnChange}\n                placeholder=\"Number of hours\"\n                type=\"number\" \n                value={task.hr}\n                name=\"hr\"\n                />\n                </Col>\n                <Col>\n                <Button type=\"submit\" variant=\"primary\"> Add</Button>\n                </Col>\n            </Row>\n            </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}