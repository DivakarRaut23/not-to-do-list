{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport { createTask, getTaskLists, switchTask } from './api/taskApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n  const [index, setIndex] = useState([]);\n  const [noIndex, setNoIndex] = useState([]);\n  const [response, setResponse] = useState({\n    message: \"\",\n    status: \"\"\n  });\n  const [isPending, setIsPending] = useState(false);\n  useEffect(() => {\n    const initialTask = async () => {\n      const fetchTask = await getTaskLists();\n      fetchTask && fetchTask.length && setTaskList(fetchTask);\n    };\n\n    initialTask();\n  }, []);\n\n  const getAllTask = async () => {\n    const fetchTask = (await getTaskLists()) || [];\n    console.log(\"From App.js data>>>\", fetchTask);\n    setTaskList(fetchTask);\n  };\n\n  const handleOnAddTask = async formData => {\n    if (Number(formData.hr) + totalHour > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      setIsPending(true);\n      const res = await createTask(formData);\n      setResponse(res);\n      setIsPending(false);\n      res.status === \"success\" && getAllTask();\n    }\n  };\n\n  const handleOnRemoveTask = index => {\n    const item = taskList[index];\n    const newArray = taskList.filter((item, i) => i !== index);\n    setTaskList(newArray);\n    setNotToDoList([...notToDoList, item]);\n    console.log(notToDoList);\n  };\n\n  const handleOnDeleteTask = () => {\n    console.log(\"index wala Array >>>>\", index);\n    console.log(\"NoIndex wala Array >>>>\", noIndex);\n\n    if (window.confirm(\"Are you sure want to delete the selected items? \")) {\n      const updatedArray = taskList.filter((item, i) => !index.includes(i));\n      const updatedNotArray = notToDoList.filter((item, i) => !index.includes(i));\n      console.log(\"Updated array after delete>>\", updatedArray);\n      setTaskList(updatedArray);\n      setNotToDoList(updatedNotArray);\n      setIndex([]);\n      setNoIndex([]);\n    }\n  };\n\n  const markAsToDo = index => {\n    const item = notToDoList[index];\n    const newArray = notToDoList.filter((item, i) => i !== index);\n    setNotToDoList(newArray);\n    setTaskList([...taskList, item]);\n  };\n\n  const calcTotalHours = list => {\n    let total = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      total = Number(list[i].hr) + total;\n    }\n\n    return total;\n  };\n\n  const hourSaved = calcTotalHours(notToDoList);\n  const hoursAllocated = calcTotalHours(taskList);\n  const totalHour = hourSaved + hoursAllocated;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [response.message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: response.status === 'success' ? \"success\" : \"danger\",\n          children: [\" \", response.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), isPending && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n        handleOnAddTask: handleOnAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {\n            taskList: taskList,\n            handleOnRemoveTask: handleOnRemoveTask,\n            index: index,\n            setIndex: setIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n            notToDoList: notToDoList,\n            markAsToDo: markAsToDo,\n            noIndex: noIndex,\n            setNoIndex: setNoIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => handleOnDeleteTask(index),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            totalHour: totalHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(HourSaved, {\n            hourSaved: hourSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"J4CiCKDj3AVIXcPSiST/cwNuaz8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","useEffect","Container","Row","Col","Button","Alert","Spinner","AddForm","TaskLists","NotToDoLists","TotalHr","HourSaved","createTask","getTaskLists","switchTask","App","taskList","setTaskList","notToDoList","setNotToDoList","index","setIndex","noIndex","setNoIndex","response","setResponse","message","status","isPending","setIsPending","initialTask","fetchTask","length","getAllTask","console","log","handleOnAddTask","formData","Number","hr","totalHour","alert","res","handleOnRemoveTask","item","newArray","filter","i","handleOnDeleteTask","window","confirm","updatedArray","includes","updatedNotArray","markAsToDo","calcTotalHours","list","total","hourSaved","hoursAllocated"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport { Container, Row, Col ,Button,Alert, Spinner}from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\nimport { HourSaved } from './components/hourSaved/HourSaved';\nimport {createTask, getTaskLists,switchTask,} from './api/taskApi.js';\n\n\n\nconst  App = () => {\n\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\nconst [index, setIndex] = useState([])\nconst [noIndex, setNoIndex] = useState([])\n\nconst [response, setResponse] = useState({\n  message:\"\",\n  status: \"\"\n})\n\nconst [isPending, setIsPending] = useState(false)\n\nuseEffect(() => {\n\n  const initialTask = async () => {\n    const fetchTask = await getTaskLists();\n      fetchTask && fetchTask.length && setTaskList(fetchTask)\n\n\n  }\n  initialTask();\n\n  \n},[])\n\nconst getAllTask = async () => {\n\n  const fetchTask = await getTaskLists() || [];\n\n    console.log(\"From App.js data>>>\", fetchTask)\n\n      setTaskList(fetchTask)\n}\n\nconst handleOnAddTask =  async formData => {\n\n  if ((Number(formData.hr) + totalHour) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    setIsPending(true)\n    const res = await createTask(formData);\n    setResponse(res)\n    setIsPending(false)\n\n    res.status === \"success\" && getAllTask();\n}\n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList[index];\n\n  const newArray = taskList.filter((item, i) => i !== index);\n  setTaskList(newArray)\n\n  setNotToDoList([...notToDoList, item]);\n\n  console.log(notToDoList)\n}\n\nconst handleOnDeleteTask = () => {\n  console.log(\"index wala Array >>>>\",index);\n  console.log(\"NoIndex wala Array >>>>\", noIndex)\n\n  if(window.confirm(\"Are you sure want to delete the selected items? \")){\n    const updatedArray = taskList.filter((item,i) => !index.includes(i));\n    const updatedNotArray = notToDoList.filter((item,i) => !index.includes(i));\n    console.log(\"Updated array after delete>>\", updatedArray)\n    setTaskList(updatedArray)\n    setNotToDoList(updatedNotArray)\n    setIndex([]);\n    setNoIndex([]);\n  } \n}\n\n\n\nconst markAsToDo = index => {\n\n  const item = notToDoList[index];\n  const newArray = notToDoList.filter((item, i) => i !== index);\n\n  setNotToDoList(newArray);\n\n  setTaskList([...taskList, item]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  }\n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\nconst hoursAllocated = calcTotalHours(taskList);\nconst totalHour = hourSaved + hoursAllocated ;\n\n  return (\n          <div className=\"App\">\n                <Container>\n            <Row>\n              <Col>\n              <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n              </Col>\n            </Row>\n            <hr />\n            <div>\n              {response.message && \n              <Alert variant={response.status === 'success' ? \"success\" : \"danger\"}> {response.message}</Alert>\n              }\n              { isPending && \n              <Spinner animation=\"border\"></Spinner>\n            }\n            </div>\n            <AddForm handleOnAddTask={handleOnAddTask}/>\n            <hr/>\n            <Row>\n              <Col>\n              <TaskLists \n              taskList={taskList}\n              handleOnRemoveTask={handleOnRemoveTask}\n              index={index}\n              setIndex={setIndex}\n              />\n              </Col>\n              <Col>\n              <NotToDoLists \n              notToDoList={notToDoList}\n              markAsToDo={markAsToDo}\n              noIndex={noIndex}\n              setNoIndex={setNoIndex}\n              />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Button variant=\"danger\" onClick={() => handleOnDeleteTask(index)}> Delete </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <TotalHr totalHour={totalHour}/>\n              </Col>\n              <Col>\n              <HourSaved hourSaved={hourSaved}/>\n              </Col>\n            </Row>\n          </Container>\n          \n          </div>\n  );\n}\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}