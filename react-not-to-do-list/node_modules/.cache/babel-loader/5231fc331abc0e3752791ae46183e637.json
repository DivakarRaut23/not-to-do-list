{"ast":null,"code":"var _jsxFileName = \"/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './components/form/Addform';\nimport { TaskLists } from './components/taskList/TaskLists';\nimport { NotToDoLists } from './components/notToDoLists/NotToDoLists';\nimport { TotalHr } from './components/totalHour/TotalHr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  const [notToDoList, setNotToDoList] = useState([]);\n\n  const handleOnAddTask = formData => {\n    const hourSpent = calcTotalHours(taskList);\n\n    if (Number(formData.hr) + hourSpent > 168) {\n      alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \");\n    } else {\n      setTaskList([...taskList, formData]);\n    }\n  };\n\n  const handleOnRemoveTask = index => {\n    const item = taskList.splice(index, 1);\n    setNotToDoList([...notToDoList, item[0]]);\n    console.log(notToDoList);\n  };\n\n  const markAsToDo = index => {\n    const item = notToDoList.splice(index, 1);\n    setTaskList([...taskList, item[0]]);\n  };\n\n  const calcTotalHours = list => {\n    let total = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      total = Number(list[i].hr) + total;\n    }\n\n    return total;\n  };\n\n  const hourSaved = calcTotalHours(notToDoList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-5\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" NOT TO DO LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n        handleOnAddTask: handleOnAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TaskLists, {\n            taskLists: taskList,\n            handleOnRemoveTask: handleOnRemoveTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(NotToDoLists, {\n            notToDoList: notToDoList,\n            markAsToDo: markAsToDo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TotalHr, {\n            hourSaved: hourSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fOcQvuKjS4pGwxX/chIHmNS+9xU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thewalker/Documents/bootcamp/react-not-to-do-list/src/App.js"],"names":["useState","Container","Row","Col","AddForm","TaskLists","NotToDoLists","TotalHr","App","taskList","setTaskList","notToDoList","setNotToDoList","handleOnAddTask","formData","hourSpent","calcTotalHours","Number","hr","alert","handleOnRemoveTask","index","item","splice","console","log","markAsToDo","list","total","i","length","hourSaved"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport { Container, Row, Col }from 'react-bootstrap';\nimport './App.css';\nimport {AddForm} from './components/form/Addform';\nimport {TaskLists} from './components/taskList/TaskLists';\nimport {NotToDoLists} from './components/notToDoLists/NotToDoLists';\nimport {TotalHr} from './components/totalHour/TotalHr';\n\n\n\nconst  App = () => {\n\nconst [taskList, setTaskList] = useState([]);\nconst [notToDoList, setNotToDoList] = useState([])\n\nconst handleOnAddTask = formData => {\n\n  const hourSpent = calcTotalHours(taskList);\n\n  if ((Number(formData.hr) + hourSpent) > 168 ) {\n\n    alert(\"You are exhausting yourself, Your have exceeded more than 168 hrs \")\n\n  } else {\n\n    setTaskList([...taskList, formData]);\n\n  }\n    \n}\n\nconst handleOnRemoveTask = index => {\n\n  const item = taskList.splice(index, 1);\n\n  setNotToDoList([...notToDoList, item[0]]);\n\n  console.log(notToDoList)\n}\n\nconst markAsToDo = index => {\n\n  const item = notToDoList.splice(index, 1);\n\n  setTaskList([...taskList, item[0]]);\n}\n\nconst calcTotalHours = list => {\n  let total = 0 ;\n  for (let i= 0; i < list.length ; i++){\n    total = Number(list[i].hr) + total ;\n    \n  } \n  return total ;\n}\n\nconst hourSaved =  calcTotalHours(notToDoList);\n\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n  <Row>\n    <Col>\n    <div className=\"text-center mt-5\" > <h1> NOT TO DO LIST </h1></div>\n    </Col>\n  </Row>\n  <hr />\n  <AddForm handleOnAddTask={handleOnAddTask}/>\n  <hr/>\n  <Row>\n    <Col>\n    <TaskLists \n    taskLists={taskList}\n    handleOnRemoveTask={handleOnRemoveTask}\n    />\n    </Col>\n    <Col>\n    <NotToDoLists \n    notToDoList={notToDoList}\n    markAsToDo={markAsToDo}\n    />\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n    </Col>\n    <Col>\n     <TotalHr hourSaved={hourSaved}/>\n    </Col>\n  </Row>\n</Container>\n\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}